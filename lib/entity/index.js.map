{"version":3,"file":"index.js","sources":["src/components/entity/Entity.vue?rollup-plugin-vue=script.js","src/components/entity/Entity.vue","src/components/entity/index.js"],"sourcesContent":["\nimport cmp from '../../mixins/virtualCmp'\nimport mixinPickEvent from '../../mixins/event/mixinPickEvent'\nimport { position, plane } from '../../mixins/mixinProps'\nimport mergeDescriptors from '../../utils/mergeDescriptors'\nimport bindEvents from '../../utils/bindEvent'\nimport { Events } from '../../utils/events'\n\nexport default {\n  name: 'vc-entity',\n  mixins: [cmp, position, plane, mixinPickEvent],\n  props: {\n    id: String,\n    name: String,\n    availability: Object,\n    show: {\n      type: Boolean,\n      default: true\n    },\n    description: [String, Object],\n    orientation: Object,\n    viewFrom: Object,\n    parent: Object,\n    billboard: Object,\n    corridor: Object,\n    cylinder: Object,\n    ellipse: Object,\n    ellipsoid: Object,\n    box: Object,\n    label: Object,\n    model: Object,\n    tileset: Object,\n    path: Object,\n    point: Object,\n    polygon: Object,\n    polyline: Object,\n    properties: Object,\n    polylineVolume: Object,\n    rectangle: Object,\n    wall: Object,\n    enableEvent: {\n      type: Boolean,\n      default: true\n    }\n  },\n  methods: {\n    async mount () {\n      const { entities, entity, registerEvents } = this\n      registerEvents(true)\n      bindEvents.call(this, entity, Events['entity-events'])\n      return entities && entities.add(entity)\n    },\n    async unmount () {\n      const { entities, entity, registerEvents } = this\n      bindEvents.call(this, entity, Events['entity-events'], false)\n      registerEvents(false)\n      return entities && entities.remove(entity)\n    },\n    setGraphics (graphics, type) {\n      const listener = this.$listeners['update:' + type]\n      if (listener) {\n        this.$emit('update:' + type, graphics)\n      } else {\n        this.entity[type] = graphics\n      }\n      return true\n    },\n    getServices () {\n      const vm = this\n      return mergeDescriptors(cmp.methods.getServices.call(this), {\n        get entity () {\n          return vm.entity\n        },\n        get graphicsContainer () {\n          return vm\n        }\n      })\n    }\n  },\n  stubVNode: {\n    attrs () {\n      return {\n        class: this.$options.name\n      }\n    }\n  },\n  created () {\n    Object.defineProperties(this, {\n      entity: {\n        enumerable: true,\n        get: () => this.cesiumObject\n      },\n      entities: {\n        enumerable: true,\n        get: () => this.$services && this.$services.entities\n      }\n    })\n  }\n}\n","<script>\nimport cmp from '../../mixins/virtualCmp'\nimport mixinPickEvent from '../../mixins/event/mixinPickEvent'\nimport { position, plane } from '../../mixins/mixinProps'\nimport mergeDescriptors from '../../utils/mergeDescriptors'\nimport bindEvents from '../../utils/bindEvent'\nimport { Events } from '../../utils/events'\n\nexport default {\n  name: 'vc-entity',\n  mixins: [cmp, position, plane, mixinPickEvent],\n  props: {\n    id: String,\n    name: String,\n    availability: Object,\n    show: {\n      type: Boolean,\n      default: true\n    },\n    description: [String, Object],\n    orientation: Object,\n    viewFrom: Object,\n    parent: Object,\n    billboard: Object,\n    corridor: Object,\n    cylinder: Object,\n    ellipse: Object,\n    ellipsoid: Object,\n    box: Object,\n    label: Object,\n    model: Object,\n    tileset: Object,\n    path: Object,\n    point: Object,\n    polygon: Object,\n    polyline: Object,\n    properties: Object,\n    polylineVolume: Object,\n    rectangle: Object,\n    wall: Object,\n    enableEvent: {\n      type: Boolean,\n      default: true\n    }\n  },\n  methods: {\n    async mount () {\n      const { entities, entity, registerEvents } = this\n      registerEvents(true)\n      bindEvents.call(this, entity, Events['entity-events'])\n      return entities && entities.add(entity)\n    },\n    async unmount () {\n      const { entities, entity, registerEvents } = this\n      bindEvents.call(this, entity, Events['entity-events'], false)\n      registerEvents(false)\n      return entities && entities.remove(entity)\n    },\n    setGraphics (graphics, type) {\n      const listener = this.$listeners['update:' + type]\n      if (listener) {\n        this.$emit('update:' + type, graphics)\n      } else {\n        this.entity[type] = graphics\n      }\n      return true\n    },\n    getServices () {\n      const vm = this\n      return mergeDescriptors(cmp.methods.getServices.call(this), {\n        get entity () {\n          return vm.entity\n        },\n        get graphicsContainer () {\n          return vm\n        }\n      })\n    }\n  },\n  stubVNode: {\n    attrs () {\n      return {\n        class: this.$options.name\n      }\n    }\n  },\n  created () {\n    Object.defineProperties(this, {\n      entity: {\n        enumerable: true,\n        get: () => this.cesiumObject\n      },\n      entities: {\n        enumerable: true,\n        get: () => this.$services && this.$services.entities\n      }\n    })\n  }\n}\n</script>\n","\nimport Entity from './Entity.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  Vue.component(Entity.name, Entity)\n}\n\nexport default plugin\n\nexport {\n  Entity,\n  plugin as install\n}\n"],"names":["name","mixins","cmp","position","plane","mixinPickEvent","props","id","String","availability","Object","show","type","Boolean","default","description","orientation","viewFrom","parent","billboard","corridor","cylinder","ellipse","ellipsoid","box","label","model","tileset","path","point","polygon","polyline","properties","polylineVolume","rectangle","wall","enableEvent","methods","mount","entities","entity","registerEvents","bindEvents","call","Events","add","unmount","remove","setGraphics","graphics","listener","$listeners","$emit","getServices","vm","mergeDescriptors","graphicsContainer","stubVNode","attrs","class","$options","created","defineProperties","enumerable","get","cesiumObject","$services","plugin","Vue","installed","component","Entity"],"mappings":"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"}