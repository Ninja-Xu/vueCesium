{"version":3,"file":"index.js","sources":["src/components/extend/heatmap/VcHeatMap.vue?rollup-plugin-vue=script.js","src/components/extend/heatmap/VcHeatMap.vue","src/components/extend/heatmap/index.js"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport cmp from '../../../mixins/virtualCmp'\nimport h337 from 'heatmap.js'\nexport default {\n  name: 'vc-heatmap',\n  data () {\n    return {\n      defaultOptions: {\n        useEntitiesIfAvailable: true, // whether to use entities if a Viewer is supplied or always use an ImageryProvider\n        minCanvasSize: 700, // minimum size (in pixels) for the heatmap canvas\n        maxCanvasSize: 2000, // maximum size (in pixels) for the heatmap canvas\n        radiusFactor: 60, // data point size factor used if no radius is given (the greater of height and width divided by this number yields the used radius)\n        spacingFactor: 1.5, // extra space around the borders (point radius multiplied by this number yields the spacing)\n        maxOpacity: 0.8, // the maximum opacity used if not given in the heatmap options object\n        minOpacity: 0.1, // the minimum opacity used if not given in the heatmap options object\n        blur: 0.85, // the blur used if not given in the heatmap options object\n        gradient: {\n          // the gradient used if not given in the heatmap options object\n          '.3': 'blue',\n          '.65': 'yellow',\n          '.8': 'orange',\n          '.95': 'red'\n        }\n      },\n      material: null,\n      appearance: null,\n      coordinates: { west: 0, south: 0, east: 0, north: 0 },\n      layerUrl: '',\n      // nowaiting: true,\n      canRender: false\n    }\n  },\n  mixins: [cmp],\n  props: {\n    type: {\n      type: Number,\n      default: 0\n    },\n    bounds: Object,\n    options: Object,\n    min: Number,\n    max: Number,\n    data: Array,\n    show: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    changeProps () {\n      const { bounds, options, min, max, data } = this\n      return {\n        bounds,\n        options,\n        min,\n        max,\n        data\n      }\n    }\n  },\n  watch: {\n    changeProps: {\n      async handler (val, oldValue) {\n        await this.getVcParent(this).createPromise\n        if (JSON.stringify(val) === JSON.stringify(oldValue)) return\n        const { _heatmapInstance } = this\n        if (JSON.stringify(val.bounds) !== JSON.stringify(oldValue.bounds)) {\n          this.setBounds(val.bounds)\n        }\n        val.min !== oldValue.min && _heatmapInstance.setDataMin(val.min)\n        val.max !== oldValue.max && _heatmapInstance.setDataMin(val.max)\n        JSON.stringify(val.options) !== JSON.stringify(oldValue.options) && _heatmapInstance.configure(val.options)\n        JSON.stringify(val.data) !== JSON.stringify(oldValue.data) && this.setWGS84Data(val.min, val.max, val.data)\n        this.layerUrl = _heatmapInstance.getDataURL()\n        this.appearance.material.uniforms.image = this.layerUrl\n      },\n      deep: true\n    }\n  },\n  methods: {\n    async createCesiumObject () {\n      const { bounds, options, min, max, data, defaultOptions } = this\n      this._WMP = new Cesium.WebMercatorProjection(this.viewer.scene.globe.ellipsoid)\n      this._id = this.getID()\n      options.gradient = options.gradient ? options.gradient : defaultOptions.gradient\n      const { breaks, colors } = options\n\n      if (breaks && breaks.length !== 0 && (colors && colors.length !== 0)) {\n        if (breaks.length + 1 === colors.length) {\n          breaks.push(max)\n        }\n        options.gradient = {}\n        const Δ = max - min\n        for (let i = 0; i < breaks.length; i++) {\n          options.gradient[`${(breaks[i] - min) / Δ}`] = colors[i]\n        }\n      }\n\n      options.maxOpacity = options.maxOpacity ? options.maxOpacity : defaultOptions.maxOpacity\n      options.minOpacity = options.minOpacity ? options.minOpacity : defaultOptions.minOpacity\n      options.blur = options.blur ? options.blur : defaultOptions.blur\n      this.setBounds(bounds)\n      this._container = this.getContainer(this.width, this.height, this._id)\n      this.options.container = this._container\n      this._heatmapInstance = h337.create(this.options)\n      this._container.children[0].setAttribute('id', this._id + '-hm')\n      if (this.setWGS84Data(min, max, data)) {\n        this.layerUrl = this._heatmapInstance.getDataURL()\n      }\n      this.material = new Cesium.ImageMaterialProperty({\n        image: new Cesium.CallbackProperty(this.materialCallback, false),\n        transparent: true\n      })\n      this.appearance = new Cesium.MaterialAppearance({\n        material: new Cesium.Material({\n          fabric: {\n            type: 'Image',\n            uniforms: {\n              image: this.layerUrl\n            }\n          }\n        })\n      })\n\n      return this._heatmapInstance\n    },\n    materialCallback () {\n      return this.layerUrl\n    },\n    setBounds (bounds) {\n      const { options, defaultOptions } = this\n      this._mBounds = this.wgs84ToMercatorBounds(bounds)\n      this.setWidthAndHeight(this._mBounds)\n      options.radius = Math.round(\n        options.radius\n          ? options.radius\n          : this.width > this.height\n            ? this.width / defaultOptions.radiusFactor\n            : this.height / defaultOptions.radiusFactor\n      )\n      this._spacing = options.radius * defaultOptions.spacingFactor\n      this._xoffset = this._mBounds.west\n      this._yoffset = this._mBounds.south\n      this.width = Math.round(this.width + this._spacing * 2)\n      this.height = Math.round(this.height + this._spacing * 2)\n      this._mBounds.west -= this._spacing * this._factor\n      this._mBounds.east += this._spacing * this._factor\n      this._mBounds.south -= this._spacing * this._factor\n      this._mBounds.north += this._spacing * this._factor\n      this._bounds = this.mercatorToWgs84Bounds(this._mBounds)\n      this.coordinates = this._bounds\n    },\n    async mount () {\n      return true\n    },\n    async unmount () {\n      this._container && this._container.parentNode.removeChild(this._container)\n      return true\n    },\n    setWidthAndHeight (mbb) {\n      const { defaultOptions } = this\n      this.width = mbb.east > 0 && mbb.west < 0 ? mbb.east + Math.abs(mbb.west) : Math.abs(mbb.east - mbb.west)\n      this.height = mbb.north > 0 && mbb.south < 0 ? mbb.north + Math.abs(mbb.south) : Math.abs(mbb.north - mbb.south)\n      this._factor = 1\n      if (this.width > this.height && this.width > defaultOptions.maxCanvasSize) {\n        this._factor = this.width / defaultOptions.maxCanvasSize\n        if (this.height / this._factor < defaultOptions.minCanvasSize) {\n          this._factor = this.height / defaultOptions.minCanvasSize\n        }\n      } else if (this.height > this.width && this.height > defaultOptions.maxCanvasSize) {\n        this._factor = this.height / defaultOptions.maxCanvasSize\n        if (this.width / this._factor < defaultOptions.minCanvasSize) {\n          this._factor = this.width / defaultOptions.minCanvasSize\n        }\n      } else if (this.width < this.height && this.width < defaultOptions.minCanvasSize) {\n        this._factor = this.width / defaultOptions.minCanvasSize\n        if (this.height / this._factor > defaultOptions.maxCanvasSize) {\n          this._factor = this.height / defaultOptions.maxCanvasSize\n        }\n      } else if (this.height < this.width && this.height < defaultOptions.minCanvasSize) {\n        this._factor = this.height / defaultOptions.minCanvasSize\n        if (this.width / this._factor > defaultOptions.maxCanvasSize) {\n          this._factor = this.width / defaultOptions.maxCanvasSize\n        }\n      }\n      this.width = this.width / this._factor\n      this.height = this.height / this._factor\n    },\n    getContainer (width, height, id) {\n      const c = document.createElement('div')\n      if (id) {\n        c.setAttribute('id', id)\n      }\n      c.setAttribute('style', 'width: ' + width + 'px; height: ' + height + 'px; margin: 0px; display: none;')\n      document.body.appendChild(c)\n      return c\n    },\n    getID (len) {\n      let text = ''\n      const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n\n      for (let i = 0; i < (len || 8); i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\n      }\n\n      return text\n    },\n    /*  Convert a WGS84 location into a mercator location\n     *\n     *  p: the WGS84 location like {x: lon, y: lat}\n     */\n    wgs84ToMercator (p) {\n      const mp = this._WMP.project(Cesium.Cartographic.fromDegrees(p.x, p.y))\n      return {\n        x: mp.x,\n        y: mp.y\n      }\n    },\n    /*  Convert a WGS84 bounding box into a mercator bounding box\n     *\n     *  bb: the WGS84 bounding box like {north, east, south, west}\n     */\n    wgs84ToMercatorBounds (bounds) {\n      const sw = this._WMP.project(Cesium.Cartographic.fromDegrees(bounds.west, bounds.south))\n      const ne = this._WMP.project(Cesium.Cartographic.fromDegrees(bounds.east, bounds.north))\n      return {\n        north: ne.y,\n        east: ne.x,\n        south: sw.y,\n        west: sw.x\n      }\n    },\n    /*  Convert a mercator location into a WGS84 location\n     *\n     *  p: the mercator lcation like {x, y}\n     */\n    mercatorToWgs84 (p) {\n      const wp = this._WMP.unproject(new Cesium.Cartesian3(p.x, p.y))\n      return {\n        x: wp.longitude,\n        y: wp.latitude\n      }\n    },\n\n    /*  Convert a mercator bounding box into a WGS84 bounding box\n     *\n     *  bb: the mercator bounding box like {north, east, south, west}\n     */\n    mercatorToWgs84Bounds (bb) {\n      const sw = this._WMP.unproject(new Cesium.Cartesian3(bb.west, bb.south))\n      const ne = this._WMP.unproject(new Cesium.Cartesian3(bb.east, bb.north))\n      return {\n        north: this.rad2deg(ne.latitude),\n        east: this.rad2deg(ne.longitude),\n        south: this.rad2deg(sw.latitude),\n        west: this.rad2deg(sw.longitude)\n      }\n    },\n\n    /*  Convert degrees into radians\n     *\n     *  d: the degrees to be converted to radians\n     */\n    deg2rad (d) {\n      const r = d * (Math.PI / 180.0)\n      return r\n    },\n\n    /*  Convert radians into degrees\n     *\n     *  r: the radians to be converted to degrees\n     */\n    rad2deg (r) {\n      const d = r / (Math.PI / 180.0)\n      return d\n    },\n    /*  Set an array of heatmap locations\n     *\n     *  min:  the minimum allowed value for the data values\n     *  max:  the maximum allowed value for the data values\n     *  data: an array of data points in heatmap coordinates and values like {x, y, value}\n     */\n    setData (min, max, data) {\n      if (data && data.length > 0 && min !== null && min !== false && max !== null && max !== false) {\n        this._heatmapInstance.setData({\n          min: min,\n          max: max,\n          data: data\n        })\n        // this.updateLayer()\n        return true\n      }\n      return false\n    },\n    /*  Set an array of WGS84 locations\n     *\n     *  min:  the minimum allowed value for the data values\n     *  max:  the maximum allowed value for the data values\n     *  data: an array of data points in WGS84 coordinates and values like { x:lon, y:lat, value }\n     */\n    setWGS84Data (min, max, data) {\n      if (data && data.length > 0 && min !== null && min !== false && max !== null && max !== false) {\n        const convdata = []\n        for (let i = 0; i < data.length; i++) {\n          const gp = data[i]\n          const hp = this.wgs84PointToHeatmapPoint(gp)\n          if (gp.value || gp.value === 0) {\n            hp.value = gp.value\n          }\n          convdata.push(hp)\n        }\n        return this.setData(min, max, convdata)\n      }\n      return false\n    },\n    /*  Convert a WGS84 location to the corresponding heatmap location\n     *\n     *  p: a WGS84 location like {x:lon, y:lat}\n     */\n    wgs84PointToHeatmapPoint (p) {\n      return this.mercatorPointToHeatmapPoint(this.wgs84ToMercator(p))\n    },\n    /*  Convert a mercator location to the corresponding heatmap location\n     *\n     *  p: a WGS84 location like {x: lon, y:lat}\n     */\n    mercatorPointToHeatmapPoint (p) {\n      const pn = {}\n      pn.x = Math.round((p.x - this._xoffset) / this._factor + this._spacing)\n      pn.y = Math.round((p.y - this._yoffset) / this._factor + this._spacing)\n      pn.y = this.height - pn.y\n      return pn\n    }\n  },\n  created () {\n    Object.defineProperties(this, {\n      heatMapInstance: {\n        enumerable: true,\n        get: () => this.$services && this.cesiumObject\n      }\n    })\n  }\n}\n","<template>\n  <i :class=\"$options.name\" style=\"display: none !important\">\n    <vc-entity :show=\"show\" ref=\"childRef\" v-if=\"type === 1\">\n      <vc-graphics-rectangle :coordinates=\"coordinates\" :material=\"material\"></vc-graphics-rectangle>\n    </vc-entity>\n    <vc-primitive-ground :appearance=\"appearance\" :releaseGeometryInstances=\"false\" :show=\"show\" ref=\"childRef\" v-else-if=\"type === 0\">\n      <vc-instance-geometry>\n        <vc-geometry-rectangle :rectangle=\"coordinates\"></vc-geometry-rectangle>\n      </vc-instance-geometry>\n    </vc-primitive-ground>\n    <vc-layer-imagery :show=\"show\" ref=\"childRef\" v-else-if=\"type === 2\">\n      <vc-provider-imagery-tile-single :rectangle=\"coordinates\" :url=\"layerUrl\"></vc-provider-imagery-tile-single>\n    </vc-layer-imagery>\n  </i>\n</template>\n<script>\nimport cmp from '../../../mixins/virtualCmp'\nimport h337 from 'heatmap.js'\nexport default {\n  name: 'vc-heatmap',\n  data () {\n    return {\n      defaultOptions: {\n        useEntitiesIfAvailable: true, // whether to use entities if a Viewer is supplied or always use an ImageryProvider\n        minCanvasSize: 700, // minimum size (in pixels) for the heatmap canvas\n        maxCanvasSize: 2000, // maximum size (in pixels) for the heatmap canvas\n        radiusFactor: 60, // data point size factor used if no radius is given (the greater of height and width divided by this number yields the used radius)\n        spacingFactor: 1.5, // extra space around the borders (point radius multiplied by this number yields the spacing)\n        maxOpacity: 0.8, // the maximum opacity used if not given in the heatmap options object\n        minOpacity: 0.1, // the minimum opacity used if not given in the heatmap options object\n        blur: 0.85, // the blur used if not given in the heatmap options object\n        gradient: {\n          // the gradient used if not given in the heatmap options object\n          '.3': 'blue',\n          '.65': 'yellow',\n          '.8': 'orange',\n          '.95': 'red'\n        }\n      },\n      material: null,\n      appearance: null,\n      coordinates: { west: 0, south: 0, east: 0, north: 0 },\n      layerUrl: '',\n      // nowaiting: true,\n      canRender: false\n    }\n  },\n  mixins: [cmp],\n  props: {\n    type: {\n      type: Number,\n      default: 0\n    },\n    bounds: Object,\n    options: Object,\n    min: Number,\n    max: Number,\n    data: Array,\n    show: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    changeProps () {\n      const { bounds, options, min, max, data } = this\n      return {\n        bounds,\n        options,\n        min,\n        max,\n        data\n      }\n    }\n  },\n  watch: {\n    changeProps: {\n      async handler (val, oldValue) {\n        await this.getVcParent(this).createPromise\n        if (JSON.stringify(val) === JSON.stringify(oldValue)) return\n        const { _heatmapInstance } = this\n        if (JSON.stringify(val.bounds) !== JSON.stringify(oldValue.bounds)) {\n          this.setBounds(val.bounds)\n        }\n        val.min !== oldValue.min && _heatmapInstance.setDataMin(val.min)\n        val.max !== oldValue.max && _heatmapInstance.setDataMin(val.max)\n        JSON.stringify(val.options) !== JSON.stringify(oldValue.options) && _heatmapInstance.configure(val.options)\n        JSON.stringify(val.data) !== JSON.stringify(oldValue.data) && this.setWGS84Data(val.min, val.max, val.data)\n        this.layerUrl = _heatmapInstance.getDataURL()\n        this.appearance.material.uniforms.image = this.layerUrl\n      },\n      deep: true\n    }\n  },\n  methods: {\n    async createCesiumObject () {\n      const { bounds, options, min, max, data, defaultOptions } = this\n      this._WMP = new Cesium.WebMercatorProjection(this.viewer.scene.globe.ellipsoid)\n      this._id = this.getID()\n      options.gradient = options.gradient ? options.gradient : defaultOptions.gradient\n      const { breaks, colors } = options\n\n      if (breaks && breaks.length !== 0 && (colors && colors.length !== 0)) {\n        if (breaks.length + 1 === colors.length) {\n          breaks.push(max)\n        }\n        options.gradient = {}\n        const Δ = max - min\n        for (let i = 0; i < breaks.length; i++) {\n          options.gradient[`${(breaks[i] - min) / Δ}`] = colors[i]\n        }\n      }\n\n      options.maxOpacity = options.maxOpacity ? options.maxOpacity : defaultOptions.maxOpacity\n      options.minOpacity = options.minOpacity ? options.minOpacity : defaultOptions.minOpacity\n      options.blur = options.blur ? options.blur : defaultOptions.blur\n      this.setBounds(bounds)\n      this._container = this.getContainer(this.width, this.height, this._id)\n      this.options.container = this._container\n      this._heatmapInstance = h337.create(this.options)\n      this._container.children[0].setAttribute('id', this._id + '-hm')\n      if (this.setWGS84Data(min, max, data)) {\n        this.layerUrl = this._heatmapInstance.getDataURL()\n      }\n      this.material = new Cesium.ImageMaterialProperty({\n        image: new Cesium.CallbackProperty(this.materialCallback, false),\n        transparent: true\n      })\n      this.appearance = new Cesium.MaterialAppearance({\n        material: new Cesium.Material({\n          fabric: {\n            type: 'Image',\n            uniforms: {\n              image: this.layerUrl\n            }\n          }\n        })\n      })\n\n      return this._heatmapInstance\n    },\n    materialCallback () {\n      return this.layerUrl\n    },\n    setBounds (bounds) {\n      const { options, defaultOptions } = this\n      this._mBounds = this.wgs84ToMercatorBounds(bounds)\n      this.setWidthAndHeight(this._mBounds)\n      options.radius = Math.round(\n        options.radius\n          ? options.radius\n          : this.width > this.height\n            ? this.width / defaultOptions.radiusFactor\n            : this.height / defaultOptions.radiusFactor\n      )\n      this._spacing = options.radius * defaultOptions.spacingFactor\n      this._xoffset = this._mBounds.west\n      this._yoffset = this._mBounds.south\n      this.width = Math.round(this.width + this._spacing * 2)\n      this.height = Math.round(this.height + this._spacing * 2)\n      this._mBounds.west -= this._spacing * this._factor\n      this._mBounds.east += this._spacing * this._factor\n      this._mBounds.south -= this._spacing * this._factor\n      this._mBounds.north += this._spacing * this._factor\n      this._bounds = this.mercatorToWgs84Bounds(this._mBounds)\n      this.coordinates = this._bounds\n    },\n    async mount () {\n      return true\n    },\n    async unmount () {\n      this._container && this._container.parentNode.removeChild(this._container)\n      return true\n    },\n    setWidthAndHeight (mbb) {\n      const { defaultOptions } = this\n      this.width = mbb.east > 0 && mbb.west < 0 ? mbb.east + Math.abs(mbb.west) : Math.abs(mbb.east - mbb.west)\n      this.height = mbb.north > 0 && mbb.south < 0 ? mbb.north + Math.abs(mbb.south) : Math.abs(mbb.north - mbb.south)\n      this._factor = 1\n      if (this.width > this.height && this.width > defaultOptions.maxCanvasSize) {\n        this._factor = this.width / defaultOptions.maxCanvasSize\n        if (this.height / this._factor < defaultOptions.minCanvasSize) {\n          this._factor = this.height / defaultOptions.minCanvasSize\n        }\n      } else if (this.height > this.width && this.height > defaultOptions.maxCanvasSize) {\n        this._factor = this.height / defaultOptions.maxCanvasSize\n        if (this.width / this._factor < defaultOptions.minCanvasSize) {\n          this._factor = this.width / defaultOptions.minCanvasSize\n        }\n      } else if (this.width < this.height && this.width < defaultOptions.minCanvasSize) {\n        this._factor = this.width / defaultOptions.minCanvasSize\n        if (this.height / this._factor > defaultOptions.maxCanvasSize) {\n          this._factor = this.height / defaultOptions.maxCanvasSize\n        }\n      } else if (this.height < this.width && this.height < defaultOptions.minCanvasSize) {\n        this._factor = this.height / defaultOptions.minCanvasSize\n        if (this.width / this._factor > defaultOptions.maxCanvasSize) {\n          this._factor = this.width / defaultOptions.maxCanvasSize\n        }\n      }\n      this.width = this.width / this._factor\n      this.height = this.height / this._factor\n    },\n    getContainer (width, height, id) {\n      const c = document.createElement('div')\n      if (id) {\n        c.setAttribute('id', id)\n      }\n      c.setAttribute('style', 'width: ' + width + 'px; height: ' + height + 'px; margin: 0px; display: none;')\n      document.body.appendChild(c)\n      return c\n    },\n    getID (len) {\n      let text = ''\n      const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n\n      for (let i = 0; i < (len || 8); i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\n      }\n\n      return text\n    },\n    /*  Convert a WGS84 location into a mercator location\n     *\n     *  p: the WGS84 location like {x: lon, y: lat}\n     */\n    wgs84ToMercator (p) {\n      const mp = this._WMP.project(Cesium.Cartographic.fromDegrees(p.x, p.y))\n      return {\n        x: mp.x,\n        y: mp.y\n      }\n    },\n    /*  Convert a WGS84 bounding box into a mercator bounding box\n     *\n     *  bb: the WGS84 bounding box like {north, east, south, west}\n     */\n    wgs84ToMercatorBounds (bounds) {\n      const sw = this._WMP.project(Cesium.Cartographic.fromDegrees(bounds.west, bounds.south))\n      const ne = this._WMP.project(Cesium.Cartographic.fromDegrees(bounds.east, bounds.north))\n      return {\n        north: ne.y,\n        east: ne.x,\n        south: sw.y,\n        west: sw.x\n      }\n    },\n    /*  Convert a mercator location into a WGS84 location\n     *\n     *  p: the mercator lcation like {x, y}\n     */\n    mercatorToWgs84 (p) {\n      const wp = this._WMP.unproject(new Cesium.Cartesian3(p.x, p.y))\n      return {\n        x: wp.longitude,\n        y: wp.latitude\n      }\n    },\n\n    /*  Convert a mercator bounding box into a WGS84 bounding box\n     *\n     *  bb: the mercator bounding box like {north, east, south, west}\n     */\n    mercatorToWgs84Bounds (bb) {\n      const sw = this._WMP.unproject(new Cesium.Cartesian3(bb.west, bb.south))\n      const ne = this._WMP.unproject(new Cesium.Cartesian3(bb.east, bb.north))\n      return {\n        north: this.rad2deg(ne.latitude),\n        east: this.rad2deg(ne.longitude),\n        south: this.rad2deg(sw.latitude),\n        west: this.rad2deg(sw.longitude)\n      }\n    },\n\n    /*  Convert degrees into radians\n     *\n     *  d: the degrees to be converted to radians\n     */\n    deg2rad (d) {\n      const r = d * (Math.PI / 180.0)\n      return r\n    },\n\n    /*  Convert radians into degrees\n     *\n     *  r: the radians to be converted to degrees\n     */\n    rad2deg (r) {\n      const d = r / (Math.PI / 180.0)\n      return d\n    },\n    /*  Set an array of heatmap locations\n     *\n     *  min:  the minimum allowed value for the data values\n     *  max:  the maximum allowed value for the data values\n     *  data: an array of data points in heatmap coordinates and values like {x, y, value}\n     */\n    setData (min, max, data) {\n      if (data && data.length > 0 && min !== null && min !== false && max !== null && max !== false) {\n        this._heatmapInstance.setData({\n          min: min,\n          max: max,\n          data: data\n        })\n        // this.updateLayer()\n        return true\n      }\n      return false\n    },\n    /*  Set an array of WGS84 locations\n     *\n     *  min:  the minimum allowed value for the data values\n     *  max:  the maximum allowed value for the data values\n     *  data: an array of data points in WGS84 coordinates and values like { x:lon, y:lat, value }\n     */\n    setWGS84Data (min, max, data) {\n      if (data && data.length > 0 && min !== null && min !== false && max !== null && max !== false) {\n        const convdata = []\n        for (let i = 0; i < data.length; i++) {\n          const gp = data[i]\n          const hp = this.wgs84PointToHeatmapPoint(gp)\n          if (gp.value || gp.value === 0) {\n            hp.value = gp.value\n          }\n          convdata.push(hp)\n        }\n        return this.setData(min, max, convdata)\n      }\n      return false\n    },\n    /*  Convert a WGS84 location to the corresponding heatmap location\n     *\n     *  p: a WGS84 location like {x:lon, y:lat}\n     */\n    wgs84PointToHeatmapPoint (p) {\n      return this.mercatorPointToHeatmapPoint(this.wgs84ToMercator(p))\n    },\n    /*  Convert a mercator location to the corresponding heatmap location\n     *\n     *  p: a WGS84 location like {x: lon, y:lat}\n     */\n    mercatorPointToHeatmapPoint (p) {\n      const pn = {}\n      pn.x = Math.round((p.x - this._xoffset) / this._factor + this._spacing)\n      pn.y = Math.round((p.y - this._yoffset) / this._factor + this._spacing)\n      pn.y = this.height - pn.y\n      return pn\n    }\n  },\n  created () {\n    Object.defineProperties(this, {\n      heatMapInstance: {\n        enumerable: true,\n        get: () => this.$services && this.cesiumObject\n      }\n    })\n  }\n}\n</script>\n","import VcHeatMap from './VcHeatMap.vue'\n// 按需引入该组件时自动引入下面组件才能正常工作\nimport * as Entity from '../../entity'\nimport * as RectangleGraphics from '../../entity/rectangle'\nimport * as GroundPrimitive from '../../primitive/ground'\nimport * as GeometryInstance from '../../geometryInstance'\nimport * as RectangleGeometry from '../../geometryInstance/rectangle'\nimport * as ImageryLayer from '../../imageryLayer'\nimport * as SingleTileImageryProvider from '../../imageryLayer/singleTile'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n\n  Vue.use(Entity)\n  Vue.use(RectangleGraphics)\n  Vue.use(GroundPrimitive)\n  Vue.use(GeometryInstance)\n  Vue.use(RectangleGeometry)\n  Vue.use(ImageryLayer)\n  Vue.use(SingleTileImageryProvider)\n\n  plugin.installed = true\n  Vue.component(VcHeatMap.name, VcHeatMap)\n}\n\nexport default plugin\n\nexport {\n  VcHeatMap,\n  plugin as install\n}\n"],"names":["name","data","defaultOptions","useEntitiesIfAvailable","minCanvasSize","maxCanvasSize","radiusFactor","spacingFactor","maxOpacity","minOpacity","blur","gradient","material","appearance","coordinates","west","south","east","north","layerUrl","canRender","mixins","cmp","props","type","Number","default","bounds","Object","options","min","max","Array","show","Boolean","computed","changeProps","watch","handler","val","oldValue","getVcParent","createPromise","_heatmapInstance","setBounds","setDataMin","configure","setWGS84Data","getDataURL","uniforms","image","deep","methods","createCesiumObject","_WMP","Cesium","WebMercatorProjection","viewer","scene","globe","ellipsoid","_id","getID","breaks","colors","length","push","Δ","i","_container","getContainer","width","height","container","h337","create","children","setAttribute","ImageMaterialProperty","CallbackProperty","materialCallback","transparent","MaterialAppearance","Material","fabric","_mBounds","wgs84ToMercatorBounds","setWidthAndHeight","radius","Math","round","_spacing","_xoffset","_yoffset","_factor","_bounds","mercatorToWgs84Bounds","mount","unmount","parentNode","removeChild","mbb","abs","id","c","document","createElement","body","appendChild","len","text","possible","charAt","floor","random","wgs84ToMercator","p","mp","project","Cartographic","fromDegrees","x","y","sw","ne","mercatorToWgs84","wp","unproject","Cartesian3","longitude","latitude","bb","rad2deg","deg2rad","d","r","PI","setData","convdata","gp","hp","wgs84PointToHeatmapPoint","value","mercatorPointToHeatmapPoint","pn","created","defineProperties","heatMapInstance","enumerable","get","$services","cesiumObject","plugin","Vue","installed","use","Entity","RectangleGraphics","GroundPrimitive","GeometryInstance","RectangleGeometry","ImageryLayer","SingleTileImageryProvider","component","VcHeatMap"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAkBA,aAAe;AACbA,EAAAA,IAAI,EAAE,YADO;AAEbC,EAAAA,IAFa,kBAEL;AACN,WAAO;AACLC,MAAAA,cAAc,EAAE;AACdC,QAAAA,sBAAsB,EAAE,IADV;AACgB;AAC9BC,QAAAA,aAAa,EAAE,GAFD;AAEM;AACpBC,QAAAA,aAAa,EAAE,IAHD;AAGO;AACrBC,QAAAA,YAAY,EAAE,EAJA;AAII;AAClBC,QAAAA,aAAa,EAAE,GALD;AAKM;AACpBC,QAAAA,UAAU,EAAE,GANE;AAMG;AACjBC,QAAAA,UAAU,EAAE,GAPE;AAOG;AACjBC,QAAAA,IAAI,EAAE,IARQ;AAQF;AACZC,QAAAA,QAAQ,EAAE;AACR;AACA,gBAAM,MAFE;AAGR,iBAAO,QAHC;AAIR,gBAAM,QAJE;AAKR,iBAAO;AALC;AATI,OADX;AAkBLC,MAAAA,QAAQ,EAAE,IAlBL;AAmBLC,MAAAA,UAAU,EAAE,IAnBP;AAoBLC,MAAAA,WAAW,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,KAAK,EAAE,CAAlB;AAAqBC,QAAAA,IAAI,EAAE,CAA3B;AAA8BC,QAAAA,KAAK,EAAE;AAArC,OApBR;AAqBLC,MAAAA,QAAQ,EAAE,EArBL;AAsBL;AACAC,MAAAA,SAAS,EAAE;AAvBN,KAAP;AAyBD,GA5BY;AA6BbC,EAAAA,MAAM,EAAE,CAACC,GAAD,CA7BK;AA8BbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AACJA,MAAAA,IAAI,EAAEC,MADF;AAEJC,MAAAA,OAAO,EAAE;AAFL,KADD;AAKLC,IAAAA,MAAM,EAAEC,MALH;AAMLC,IAAAA,OAAO,EAAED,MANJ;AAOLE,IAAAA,GAAG,EAAEL,MAPA;AAQLM,IAAAA,GAAG,EAAEN,MARA;AASLxB,IAAAA,IAAI,EAAE+B,KATD;AAULC,IAAAA,IAAI,EAAE;AACJT,MAAAA,IAAI,EAAEU,OADF;AAEJR,MAAAA,OAAO,EAAE;AAFL;AAVD,GA9BM;AA6CbS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WADQ,yBACO;AACb,UAAQT,MAAR,GAA4C,IAA5C,CAAQA,MAAR;AAAA,UAAgBE,OAAhB,GAA4C,IAA5C,CAAgBA,OAAhB;AAAA,UAAyBC,GAAzB,GAA4C,IAA5C,CAAyBA,GAAzB;AAAA,UAA8BC,GAA9B,GAA4C,IAA5C,CAA8BA,GAA9B;AAAA,UAAmC9B,IAAnC,GAA4C,IAA5C,CAAmCA,IAAnC;AACA,aAAO;AACL0B,QAAAA,MAAM,EAANA,MADK;AAELE,QAAAA,OAAO,EAAPA,OAFK;AAGLC,QAAAA,GAAG,EAAHA,GAHK;AAILC,QAAAA,GAAG,EAAHA,GAJK;AAKL9B,QAAAA,IAAI,EAAJA;AALK,OAAP;AAOD;AAVO,GA7CG;AAyDboC,EAAAA,KAAK,EAAE;AACLD,IAAAA,WAAW,EAAE;AACLE,MAAAA,OADK,mBACIC,GADJ,EACSC,QADT,EACmB;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACtB,KAAI,CAACC,WAAL,CAAiB,KAAjB,EAAuBC,aADD;;AAAA;AAAA,wBAExB,gBAAeH,GAAf,MAAwB,gBAAeC,QAAf,CAFA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAGpBG,kBAAAA,gBAHoB,GAGC,KAHD,CAGpBA,gBAHoB;;AAI5B,sBAAI,gBAAeJ,GAAG,CAACZ,MAAnB,MAA+B,gBAAea,QAAQ,CAACb,MAAxB,CAAnC,EAAoE;AAClE,oBAAA,KAAI,CAACiB,SAAL,CAAeL,GAAG,CAACZ,MAAnB;AACD;;AACDY,kBAAAA,GAAG,CAACT,GAAJ,KAAYU,QAAQ,CAACV,GAArB,IAA4Ba,gBAAgB,CAACE,UAAjB,CAA4BN,GAAG,CAACT,GAAhC,CAA5B;AACAS,kBAAAA,GAAG,CAACR,GAAJ,KAAYS,QAAQ,CAACT,GAArB,IAA4BY,gBAAgB,CAACE,UAAjB,CAA4BN,GAAG,CAACR,GAAhC,CAA5B;AACA,kCAAeQ,GAAG,CAACV,OAAnB,MAAgC,gBAAeW,QAAQ,CAACX,OAAxB,CAAhC,IAAoEc,gBAAgB,CAACG,SAAjB,CAA2BP,GAAG,CAACV,OAA/B,CAApE;AACA,kCAAeU,GAAG,CAACtC,IAAnB,MAA6B,gBAAeuC,QAAQ,CAACvC,IAAxB,CAA7B,IAA8D,KAAI,CAAC8C,YAAL,CAAkBR,GAAG,CAACT,GAAtB,EAA2BS,GAAG,CAACR,GAA/B,EAAoCQ,GAAG,CAACtC,IAAxC,CAA9D;AACA,kBAAA,KAAI,CAACkB,QAAL,GAAgBwB,gBAAgB,CAACK,UAAjB,EAAhB;AACA,kBAAA,KAAI,CAACnC,UAAL,CAAgBD,QAAhB,CAAyBqC,QAAzB,CAAkCC,KAAlC,GAA0C,KAAI,CAAC/B,QAA/C;;AAZ4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAa7B,OAdU;AAeXgC,MAAAA,IAAI,EAAE;AAfK;AADR,GAzDM;AA4EbC,EAAAA,OAAO,EAAE;AACDC,IAAAA,kBADC,gCACqB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAClB1B,gBAAAA,MADkB,GACkC,MADlC,CAClBA,MADkB,EACVE,OADU,GACkC,MADlC,CACVA,OADU,EACDC,GADC,GACkC,MADlC,CACDA,GADC,EACIC,GADJ,GACkC,MADlC,CACIA,GADJ,EACS9B,IADT,GACkC,MADlC,CACSA,IADT,EACeC,cADf,GACkC,MADlC,CACeA,cADf;AAE1B,gBAAA,MAAI,CAACoD,IAAL,GAAY,IAAIC,MAAM,CAACC,qBAAX,CAAiC,MAAI,CAACC,MAAL,CAAYC,KAAZ,CAAkBC,KAAlB,CAAwBC,SAAzD,CAAZ;AACA,gBAAA,MAAI,CAACC,GAAL,GAAW,MAAI,CAACC,KAAL,EAAX;AACAjC,gBAAAA,OAAO,CAAClB,QAAR,GAAmBkB,OAAO,CAAClB,QAAR,GAAmBkB,OAAO,CAAClB,QAA3B,GAAsCT,cAAc,CAACS,QAAxE;AACQoD,gBAAAA,MALkB,GAKClC,OALD,CAKlBkC,MALkB,EAKVC,MALU,GAKCnC,OALD,CAKVmC,MALU;;AAO1B,oBAAID,MAAM,IAAIA,MAAM,CAACE,MAAP,KAAkB,CAA5B,IAAkCD,MAAM,IAAIA,MAAM,CAACC,MAAP,KAAkB,CAAlE,EAAsE;AACpE,sBAAIF,MAAM,CAACE,MAAP,GAAgB,CAAhB,KAAsBD,MAAM,CAACC,MAAjC,EAAyC;AACvCF,oBAAAA,MAAM,CAACG,IAAP,CAAYnC,GAAZ;AACD;;AACDF,kBAAAA,OAAO,CAAClB,QAAR,GAAmB,EAAnB;AACMwD,kBAAAA,CAL8D,GAK1DpC,GAAG,GAAGD,GALoD;;AAMpE,uBAASsC,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGL,MAAM,CAACE,MAA3B,EAAmCG,CAAC,EAApC,EAAwC;AACtCvC,oBAAAA,OAAO,CAAClB,QAAR,WAAoB,CAACoD,MAAM,CAACK,CAAD,CAAN,GAAYtC,GAAb,IAAoBqC,CAAxC,KAA+CH,MAAM,CAACI,CAAD,CAArD;AACD;AACF;;AAEDvC,gBAAAA,OAAO,CAACrB,UAAR,GAAqBqB,OAAO,CAACrB,UAAR,GAAqBqB,OAAO,CAACrB,UAA7B,GAA0CN,cAAc,CAACM,UAA9E;AACAqB,gBAAAA,OAAO,CAACpB,UAAR,GAAqBoB,OAAO,CAACpB,UAAR,GAAqBoB,OAAO,CAACpB,UAA7B,GAA0CP,cAAc,CAACO,UAA9E;AACAoB,gBAAAA,OAAO,CAACnB,IAAR,GAAemB,OAAO,CAACnB,IAAR,GAAemB,OAAO,CAACnB,IAAvB,GAA8BR,cAAc,CAACQ,IAA5D;;AACA,gBAAA,MAAI,CAACkC,SAAL,CAAejB,MAAf;;AACA,gBAAA,MAAI,CAAC0C,UAAL,GAAkB,MAAI,CAACC,YAAL,CAAkB,MAAI,CAACC,KAAvB,EAA8B,MAAI,CAACC,MAAnC,EAA2C,MAAI,CAACX,GAAhD,CAAlB;AACA,gBAAA,MAAI,CAAChC,OAAL,CAAa4C,SAAb,GAAyB,MAAI,CAACJ,UAA9B;AACA,gBAAA,MAAI,CAAC1B,gBAAL,GAAwB+B,IAAI,CAACC,MAAL,CAAY,MAAI,CAAC9C,OAAjB,CAAxB;;AACA,gBAAA,MAAI,CAACwC,UAAL,CAAgBO,QAAhB,CAAyB,CAAzB,EAA4BC,YAA5B,CAAyC,IAAzC,EAA+C,MAAI,CAAChB,GAAL,GAAW,KAA1D;;AACA,oBAAI,MAAI,CAACd,YAAL,CAAkBjB,GAAlB,EAAuBC,GAAvB,EAA4B9B,IAA5B,CAAJ,EAAuC;AACrC,kBAAA,MAAI,CAACkB,QAAL,GAAgB,MAAI,CAACwB,gBAAL,CAAsBK,UAAtB,EAAhB;AACD;;AACD,gBAAA,MAAI,CAACpC,QAAL,GAAgB,IAAI2C,MAAM,CAACuB,qBAAX,CAAiC;AAC/C5B,kBAAAA,KAAK,EAAE,IAAIK,MAAM,CAACwB,gBAAX,CAA4B,MAAI,CAACC,gBAAjC,EAAmD,KAAnD,CADwC;AAE/CC,kBAAAA,WAAW,EAAE;AAFkC,iBAAjC,CAAhB;AAIA,gBAAA,MAAI,CAACpE,UAAL,GAAkB,IAAI0C,MAAM,CAAC2B,kBAAX,CAA8B;AAC9CtE,kBAAAA,QAAQ,EAAE,IAAI2C,MAAM,CAAC4B,QAAX,CAAoB;AAC5BC,oBAAAA,MAAM,EAAE;AACN5D,sBAAAA,IAAI,EAAE,OADA;AAENyB,sBAAAA,QAAQ,EAAE;AACRC,wBAAAA,KAAK,EAAE,MAAI,CAAC/B;AADJ;AAFJ;AADoB,mBAApB;AADoC,iBAA9B,CAAlB;AAjC0B,kDA4CnB,MAAI,CAACwB,gBA5Cc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6C3B,KA9CM;AA+CPqC,IAAAA,gBA/CO,8BA+Ca;AAClB,aAAO,KAAK7D,QAAZ;AACD,KAjDM;AAkDPyB,IAAAA,SAlDO,qBAkDIjB,MAlDJ,EAkDY;AACjB,UAAQE,OAAR,GAAoC,IAApC,CAAQA,OAAR;AAAA,UAAiB3B,cAAjB,GAAoC,IAApC,CAAiBA,cAAjB;AACA,WAAKmF,QAAL,GAAgB,KAAKC,qBAAL,CAA2B3D,MAA3B,CAAhB;AACA,WAAK4D,iBAAL,CAAuB,KAAKF,QAA5B;AACAxD,MAAAA,OAAO,CAAC2D,MAAR,GAAiBC,IAAI,CAACC,KAAL,CACf7D,OAAO,CAAC2D,MAAR,GACI3D,OAAO,CAAC2D,MADZ,GAEI,KAAKjB,KAAL,GAAa,KAAKC,MAAlB,GACE,KAAKD,KAAL,GAAarE,cAAc,CAACI,YAD9B,GAEE,KAAKkE,MAAL,GAActE,cAAc,CAACI,YALpB,CAAjB;AAOA,WAAKqF,QAAL,GAAgB9D,OAAO,CAAC2D,MAAR,GAAiBtF,cAAc,CAACK,aAAhD;AACA,WAAKqF,QAAL,GAAgB,KAAKP,QAAL,CAActE,IAA9B;AACA,WAAK8E,QAAL,GAAgB,KAAKR,QAAL,CAAcrE,KAA9B;AACA,WAAKuD,KAAL,GAAakB,IAAI,CAACC,KAAL,CAAW,KAAKnB,KAAL,GAAa,KAAKoB,QAAL,GAAgB,CAAxC,CAAb;AACA,WAAKnB,MAAL,GAAciB,IAAI,CAACC,KAAL,CAAW,KAAKlB,MAAL,GAAc,KAAKmB,QAAL,GAAgB,CAAzC,CAAd;AACA,WAAKN,QAAL,CAActE,IAAd,IAAsB,KAAK4E,QAAL,GAAgB,KAAKG,OAA3C;AACA,WAAKT,QAAL,CAAcpE,IAAd,IAAsB,KAAK0E,QAAL,GAAgB,KAAKG,OAA3C;AACA,WAAKT,QAAL,CAAcrE,KAAd,IAAuB,KAAK2E,QAAL,GAAgB,KAAKG,OAA5C;AACA,WAAKT,QAAL,CAAcnE,KAAd,IAAuB,KAAKyE,QAAL,GAAgB,KAAKG,OAA5C;AACA,WAAKC,OAAL,GAAe,KAAKC,qBAAL,CAA2B,KAAKX,QAAhC,CAAf;AACA,WAAKvE,WAAL,GAAmB,KAAKiF,OAAxB;AACD,KAxEM;AAyEDE,IAAAA,KAzEC,mBAyEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDACN,IADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEd,KA3EM;AA4EDC,IAAAA,OA5EC,qBA4EU;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACf,gBAAA,MAAI,CAAC7B,UAAL,IAAmB,MAAI,CAACA,UAAL,CAAgB8B,UAAhB,CAA2BC,WAA3B,CAAuC,MAAI,CAAC/B,UAA5C,CAAnB;AADe,kDAER,IAFQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGhB,KA/EM;AAgFPkB,IAAAA,iBAhFO,6BAgFYc,GAhFZ,EAgFiB;AACtB,UAAQnG,cAAR,GAA2B,IAA3B,CAAQA,cAAR;AACA,WAAKqE,KAAL,GAAa8B,GAAG,CAACpF,IAAJ,GAAW,CAAX,IAAgBoF,GAAG,CAACtF,IAAJ,GAAW,CAA3B,GAA+BsF,GAAG,CAACpF,IAAJ,GAAWwE,IAAI,CAACa,GAAL,CAASD,GAAG,CAACtF,IAAb,CAA1C,GAA+D0E,IAAI,CAACa,GAAL,CAASD,GAAG,CAACpF,IAAJ,GAAWoF,GAAG,CAACtF,IAAxB,CAA5E;AACA,WAAKyD,MAAL,GAAc6B,GAAG,CAACnF,KAAJ,GAAY,CAAZ,IAAiBmF,GAAG,CAACrF,KAAJ,GAAY,CAA7B,GAAiCqF,GAAG,CAACnF,KAAJ,GAAYuE,IAAI,CAACa,GAAL,CAASD,GAAG,CAACrF,KAAb,CAA7C,GAAmEyE,IAAI,CAACa,GAAL,CAASD,GAAG,CAACnF,KAAJ,GAAYmF,GAAG,CAACrF,KAAzB,CAAjF;AACA,WAAK8E,OAAL,GAAe,CAAf;;AACA,UAAI,KAAKvB,KAAL,GAAa,KAAKC,MAAlB,IAA4B,KAAKD,KAAL,GAAarE,cAAc,CAACG,aAA5D,EAA2E;AACzE,aAAKyF,OAAL,GAAe,KAAKvB,KAAL,GAAarE,cAAc,CAACG,aAA3C;;AACA,YAAI,KAAKmE,MAAL,GAAc,KAAKsB,OAAnB,GAA6B5F,cAAc,CAACE,aAAhD,EAA+D;AAC7D,eAAK0F,OAAL,GAAe,KAAKtB,MAAL,GAActE,cAAc,CAACE,aAA5C;AACD;AACF,OALD,MAKO,IAAI,KAAKoE,MAAL,GAAc,KAAKD,KAAnB,IAA4B,KAAKC,MAAL,GAActE,cAAc,CAACG,aAA7D,EAA4E;AACjF,aAAKyF,OAAL,GAAe,KAAKtB,MAAL,GAActE,cAAc,CAACG,aAA5C;;AACA,YAAI,KAAKkE,KAAL,GAAa,KAAKuB,OAAlB,GAA4B5F,cAAc,CAACE,aAA/C,EAA8D;AAC5D,eAAK0F,OAAL,GAAe,KAAKvB,KAAL,GAAarE,cAAc,CAACE,aAA3C;AACD;AACF,OALM,MAKA,IAAI,KAAKmE,KAAL,GAAa,KAAKC,MAAlB,IAA4B,KAAKD,KAAL,GAAarE,cAAc,CAACE,aAA5D,EAA2E;AAChF,aAAK0F,OAAL,GAAe,KAAKvB,KAAL,GAAarE,cAAc,CAACE,aAA3C;;AACA,YAAI,KAAKoE,MAAL,GAAc,KAAKsB,OAAnB,GAA6B5F,cAAc,CAACG,aAAhD,EAA+D;AAC7D,eAAKyF,OAAL,GAAe,KAAKtB,MAAL,GAActE,cAAc,CAACG,aAA5C;AACD;AACF,OALM,MAKA,IAAI,KAAKmE,MAAL,GAAc,KAAKD,KAAnB,IAA4B,KAAKC,MAAL,GAActE,cAAc,CAACE,aAA7D,EAA4E;AACjF,aAAK0F,OAAL,GAAe,KAAKtB,MAAL,GAActE,cAAc,CAACE,aAA5C;;AACA,YAAI,KAAKmE,KAAL,GAAa,KAAKuB,OAAlB,GAA4B5F,cAAc,CAACG,aAA/C,EAA8D;AAC5D,eAAKyF,OAAL,GAAe,KAAKvB,KAAL,GAAarE,cAAc,CAACG,aAA3C;AACD;AACF;;AACD,WAAKkE,KAAL,GAAa,KAAKA,KAAL,GAAa,KAAKuB,OAA/B;AACA,WAAKtB,MAAL,GAAc,KAAKA,MAAL,GAAc,KAAKsB,OAAjC;AACD,KA5GM;AA6GPxB,IAAAA,YA7GO,wBA6GOC,KA7GP,EA6GcC,MA7Gd,EA6GsB+B,EA7GtB,EA6G0B;AAC/B,UAAMC,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV;;AACA,UAAIH,EAAJ,EAAQ;AACNC,QAAAA,CAAC,CAAC3B,YAAF,CAAe,IAAf,EAAqB0B,EAArB;AACD;;AACDC,MAAAA,CAAC,CAAC3B,YAAF,CAAe,OAAf,EAAwB,YAAYN,KAAZ,GAAoB,cAApB,GAAqCC,MAArC,GAA8C,iCAAtE;AACAiC,MAAAA,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BJ,CAA1B;AACA,aAAOA,CAAP;AACD,KArHM;AAsHP1C,IAAAA,KAtHO,iBAsHA+C,GAtHA,EAsHK;AACV,UAAIC,IAAI,GAAG,EAAX;AACA,UAAMC,QAAQ,GAAG,gEAAjB;;AAEA,WAAK,IAAI3C,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIyC,GAAG,IAAI,CAAX,CAAjB,EAAgCzC,CAAC,EAAjC,EAAqC;AACnC0C,QAAAA,IAAI,IAAIC,QAAQ,CAACC,MAAT,CAAgBvB,IAAI,CAACwB,KAAL,CAAWxB,IAAI,CAACyB,MAAL,KAAgBH,QAAQ,CAAC9C,MAApC,CAAhB,CAAR;AACD;;AAED,aAAO6C,IAAP;AACD,KA/HM;;AAgIP;AACJ;AACA;AACA;AACIK,IAAAA,eApIO,2BAoIUC,CApIV,EAoIa;AAClB,UAAMC,EAAE,GAAG,KAAK/D,IAAL,CAAUgE,OAAV,CAAkB/D,MAAM,CAACgE,YAAP,CAAoBC,WAApB,CAAgCJ,CAAC,CAACK,CAAlC,EAAqCL,CAAC,CAACM,CAAvC,CAAlB,CAAX;;AACA,aAAO;AACLD,QAAAA,CAAC,EAAEJ,EAAE,CAACI,CADD;AAELC,QAAAA,CAAC,EAAEL,EAAE,CAACK;AAFD,OAAP;AAID,KA1IM;;AA2IP;AACJ;AACA;AACA;AACIpC,IAAAA,qBA/IO,iCA+IgB3D,MA/IhB,EA+IwB;AAC7B,UAAMgG,EAAE,GAAG,KAAKrE,IAAL,CAAUgE,OAAV,CAAkB/D,MAAM,CAACgE,YAAP,CAAoBC,WAApB,CAAgC7F,MAAM,CAACZ,IAAvC,EAA6CY,MAAM,CAACX,KAApD,CAAlB,CAAX;;AACA,UAAM4G,EAAE,GAAG,KAAKtE,IAAL,CAAUgE,OAAV,CAAkB/D,MAAM,CAACgE,YAAP,CAAoBC,WAApB,CAAgC7F,MAAM,CAACV,IAAvC,EAA6CU,MAAM,CAACT,KAApD,CAAlB,CAAX;;AACA,aAAO;AACLA,QAAAA,KAAK,EAAE0G,EAAE,CAACF,CADL;AAELzG,QAAAA,IAAI,EAAE2G,EAAE,CAACH,CAFJ;AAGLzG,QAAAA,KAAK,EAAE2G,EAAE,CAACD,CAHL;AAIL3G,QAAAA,IAAI,EAAE4G,EAAE,CAACF;AAJJ,OAAP;AAMD,KAxJM;;AAyJP;AACJ;AACA;AACA;AACII,IAAAA,eA7JO,2BA6JUT,CA7JV,EA6Ja;AAClB,UAAMU,EAAE,GAAG,KAAKxE,IAAL,CAAUyE,SAAV,CAAoB,IAAIxE,MAAM,CAACyE,UAAX,CAAsBZ,CAAC,CAACK,CAAxB,EAA2BL,CAAC,CAACM,CAA7B,CAApB,CAAX;;AACA,aAAO;AACLD,QAAAA,CAAC,EAAEK,EAAE,CAACG,SADD;AAELP,QAAAA,CAAC,EAAEI,EAAE,CAACI;AAFD,OAAP;AAID,KAnKM;;AAqKP;AACJ;AACA;AACA;AACIlC,IAAAA,qBAzKO,iCAyKgBmC,EAzKhB,EAyKoB;AACzB,UAAMR,EAAE,GAAG,KAAKrE,IAAL,CAAUyE,SAAV,CAAoB,IAAIxE,MAAM,CAACyE,UAAX,CAAsBG,EAAE,CAACpH,IAAzB,EAA+BoH,EAAE,CAACnH,KAAlC,CAApB,CAAX;;AACA,UAAM4G,EAAE,GAAG,KAAKtE,IAAL,CAAUyE,SAAV,CAAoB,IAAIxE,MAAM,CAACyE,UAAX,CAAsBG,EAAE,CAAClH,IAAzB,EAA+BkH,EAAE,CAACjH,KAAlC,CAApB,CAAX;;AACA,aAAO;AACLA,QAAAA,KAAK,EAAE,KAAKkH,OAAL,CAAaR,EAAE,CAACM,QAAhB,CADF;AAELjH,QAAAA,IAAI,EAAE,KAAKmH,OAAL,CAAaR,EAAE,CAACK,SAAhB,CAFD;AAGLjH,QAAAA,KAAK,EAAE,KAAKoH,OAAL,CAAaT,EAAE,CAACO,QAAhB,CAHF;AAILnH,QAAAA,IAAI,EAAE,KAAKqH,OAAL,CAAaT,EAAE,CAACM,SAAhB;AAJD,OAAP;AAMD,KAlLM;;AAoLP;AACJ;AACA;AACA;AACII,IAAAA,OAxLO,mBAwLEC,CAxLF,EAwLK;AACV,UAAMC,CAAC,GAAGD,CAAC,IAAI7C,IAAI,CAAC+C,EAAL,GAAU,KAAd,CAAX;AACA,aAAOD,CAAP;AACD,KA3LM;;AA6LP;AACJ;AACA;AACA;AACIH,IAAAA,OAjMO,mBAiMEG,CAjMF,EAiMK;AACV,UAAMD,CAAC,GAAGC,CAAC,IAAI9C,IAAI,CAAC+C,EAAL,GAAU,KAAd,CAAX;AACA,aAAOF,CAAP;AACD,KApMM;;AAqMP;AACJ;AACA;AACA;AACA;AACA;AACIG,IAAAA,OA3MO,mBA2ME3G,GA3MF,EA2MOC,GA3MP,EA2MY9B,IA3MZ,EA2MkB;AACvB,UAAIA,IAAI,IAAIA,IAAI,CAACgE,MAAL,GAAc,CAAtB,IAA2BnC,GAAG,KAAK,IAAnC,IAA2CA,GAAG,KAAK,KAAnD,IAA4DC,GAAG,KAAK,IAApE,IAA4EA,GAAG,KAAK,KAAxF,EAA+F;AAC7F,aAAKY,gBAAL,CAAsB8F,OAAtB,CAA8B;AAC5B3G,UAAAA,GAAG,EAAEA,GADuB;AAE5BC,UAAAA,GAAG,EAAEA,GAFuB;AAG5B9B,UAAAA,IAAI,EAAEA;AAHsB,SAA9B,EAD6F;;;AAO7F,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD,KAtNM;;AAuNP;AACJ;AACA;AACA;AACA;AACA;AACI8C,IAAAA,YA7NO,wBA6NOjB,GA7NP,EA6NYC,GA7NZ,EA6NiB9B,IA7NjB,EA6NuB;AAC5B,UAAIA,IAAI,IAAIA,IAAI,CAACgE,MAAL,GAAc,CAAtB,IAA2BnC,GAAG,KAAK,IAAnC,IAA2CA,GAAG,KAAK,KAAnD,IAA4DC,GAAG,KAAK,IAApE,IAA4EA,GAAG,KAAK,KAAxF,EAA+F;AAC7F,YAAM2G,QAAQ,GAAG,EAAjB;;AACA,aAAK,IAAItE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnE,IAAI,CAACgE,MAAzB,EAAiCG,CAAC,EAAlC,EAAsC;AACpC,cAAMuE,EAAE,GAAG1I,IAAI,CAACmE,CAAD,CAAf;AACA,cAAMwE,EAAE,GAAG,KAAKC,wBAAL,CAA8BF,EAA9B,CAAX;;AACA,cAAIA,EAAE,CAACG,KAAH,IAAYH,EAAE,CAACG,KAAH,KAAa,CAA7B,EAAgC;AAC9BF,YAAAA,EAAE,CAACE,KAAH,GAAWH,EAAE,CAACG,KAAd;AACD;;AACDJ,UAAAA,QAAQ,CAACxE,IAAT,CAAc0E,EAAd;AACD;;AACD,eAAO,KAAKH,OAAL,CAAa3G,GAAb,EAAkBC,GAAlB,EAAuB2G,QAAvB,CAAP;AACD;;AACD,aAAO,KAAP;AACD,KA3OM;;AA4OP;AACJ;AACA;AACA;AACIG,IAAAA,wBAhPO,oCAgPmBzB,CAhPnB,EAgPsB;AAC3B,aAAO,KAAK2B,2BAAL,CAAiC,KAAK5B,eAAL,CAAqBC,CAArB,CAAjC,CAAP;AACD,KAlPM;;AAmPP;AACJ;AACA;AACA;AACI2B,IAAAA,2BAvPO,uCAuPsB3B,CAvPtB,EAuPyB;AAC9B,UAAM4B,EAAE,GAAG,EAAX;AACAA,MAAAA,EAAE,CAACvB,CAAH,GAAOhC,IAAI,CAACC,KAAL,CAAW,CAAC0B,CAAC,CAACK,CAAF,GAAM,KAAK7B,QAAZ,IAAwB,KAAKE,OAA7B,GAAuC,KAAKH,QAAvD,CAAP;AACAqD,MAAAA,EAAE,CAACtB,CAAH,GAAOjC,IAAI,CAACC,KAAL,CAAW,CAAC0B,CAAC,CAACM,CAAF,GAAM,KAAK7B,QAAZ,IAAwB,KAAKC,OAA7B,GAAuC,KAAKH,QAAvD,CAAP;AACAqD,MAAAA,EAAE,CAACtB,CAAH,GAAO,KAAKlD,MAAL,GAAcwE,EAAE,CAACtB,CAAxB;AACA,aAAOsB,EAAP;AACD;AA7PM,GA5EI;AA2UbC,EAAAA,OA3Ua,qBA2UF;AAAA;;AACTrH,IAAAA,MAAM,CAACsH,gBAAP,CAAwB,IAAxB,EAA8B;AAC5BC,MAAAA,eAAe,EAAE;AACfC,QAAAA,UAAU,EAAE,IADG;AAEfC,QAAAA,GAAG,EAAE;AAAA,iBAAM,MAAI,CAACC,SAAL,IAAkB,MAAI,CAACC,YAA7B;AAAA;AAFU;AADW,KAA9B;AAMD;AAlVY,CAAf;;;ACfY,2BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOZ,SAASC,MAAT,CAAiBC,GAAjB,EAAoC;AAAA;AAClC,MAAID,MAAM,CAACE,SAAX,EAAsB;AACpB;AACD;;AAEDD,EAAAA,GAAG,CAACE,GAAJ,CAAQC,MAAR;AACAH,EAAAA,GAAG,CAACE,GAAJ,CAAQE,iBAAR;AACAJ,EAAAA,GAAG,CAACE,GAAJ,CAAQG,eAAR;AACAL,EAAAA,GAAG,CAACE,GAAJ,CAAQI,gBAAR;AACAN,EAAAA,GAAG,CAACE,GAAJ,CAAQK,iBAAR;AACAP,EAAAA,GAAG,CAACE,GAAJ,CAAQM,YAAR;AACAR,EAAAA,GAAG,CAACE,GAAJ,CAAQO,yBAAR;AAEAV,EAAAA,MAAM,CAACE,SAAP,GAAmB,IAAnB;AACAD,EAAAA,GAAG,CAACU,SAAJ,CAAcC,SAAS,CAACpK,IAAxB,EAA8BoK,SAA9B;AACD;;;;;"}