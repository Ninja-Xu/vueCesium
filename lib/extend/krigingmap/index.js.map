{"version":3,"file":"index.js","sources":["src/components/extend/krigingmap/VcKrigingMap.vue?rollup-plugin-vue=script.js","src/components/extend/krigingmap/VcKrigingMap.vue","src/components/extend/krigingmap/index.js"],"sourcesContent":["//\n//\n//\n//\n//\n\nimport cmp from '../../../mixins/virtualCmp'\nimport kriging from '@sakitam-gis/kriging'\nimport { featureCollection, point } from '@turf/helpers'\nimport isobands from '@turf/isobands'\n// import area from '@turf/area'\nexport default {\n  name: 'vc-kriging-map',\n  data () {\n    return {\n      coordinates: { west: 0, south: 0, east: 0, north: 0 },\n      data: {},\n      datasourceOptions: {\n        clampToGround: true\n      }\n    }\n  },\n  mixins: [cmp],\n  props: {\n    values: Array,\n    lngs: Array,\n    lats: Array,\n    krigingModel: {\n      type: String,\n      default: 'exponential' // gaussian spherical exponential\n    },\n    krigingSigma2: {\n      type: Number,\n      default: 0\n    },\n    krigingAlpha: {\n      type: Number,\n      default: 100\n    },\n    canvasAlpha: {\n      type: Number,\n      default: 1\n    },\n    colors: {\n      type: Array,\n      default: () => {\n        return ['#006837', '#1a9850', '#66bd63', '#a6d96a', '#d9ef8b', '#ffffbf', '#fee08b', '#fdae61', '#f46d43', '#d73027', '#a50026']\n      }\n    },\n    breaks: {\n      type: Array,\n      default: () => {\n        return [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]\n      }\n    },\n    clipCoords: {\n      type: [Array, String],\n      default: () => {\n        return []\n      }\n    },\n    show: {\n      type: Boolean,\n      default: true\n    },\n    cell: Number\n  },\n  methods: {\n    async createCesiumObject () {\n      const { values, lngs, lats, krigingModel, krigingSigma2, breaks, clipCoords, krigingAlpha } = this\n      const variogram = kriging.train(values, lngs, lats, krigingModel, krigingSigma2, krigingAlpha)\n\n      let coordinates = []\n\n      if (clipCoords instanceof Array) {\n        if (clipCoords.length > 0 && clipCoords[0][0]) {\n          // 传的是 geojson 面\n          coordinates = clipCoords\n        } else {\n          // 传的是一个 bounds 数组 (左下和右上)\n          coordinates.push([\n            [clipCoords[0], clipCoords[1]], [clipCoords[0], clipCoords[3]],\n            [clipCoords[2], clipCoords[3]], [clipCoords[2], clipCoords[1]]\n          ])\n        }\n      } else if (typeof clipCoords === 'string') {\n        const requstData = await Cesium.Resource.fetchJson(clipCoords)\n        coordinates = requstData.features[0].geometry.coordinates\n      }\n\n      const coords = []\n      for (let i = 0; i < coordinates[0].length; i++) {\n        for (let j = 0; j < 2; j++) {\n          coords.push(coordinates[0][i][j])\n        }\n      }\n\n      let rectangle\n      if (coords.length > 4) {\n        rectangle = Cesium.PolygonGeometry.computeRectangle({\n          polygonHierarchy: new Cesium.PolygonHierarchy(\n            Cesium.Cartesian3.fromDegreesArray(coords, this.viewer.scene.globe.ellipsoid)\n          )\n        })\n      } else {\n        rectangle = Cesium.Rectangle.fromDegrees(coords[0], coords[1], coords[2], coords[3])\n      }\n      this.coordinates = rectangle\n\n      const extent = [\n        Cesium.Math.toDegrees(rectangle.west),\n        Cesium.Math.toDegrees(rectangle.south),\n        Cesium.Math.toDegrees(rectangle.east),\n        Cesium.Math.toDegrees(rectangle.north)\n      ]\n\n      const grid = kriging.grid(coordinates, variogram, this.cell ? this.cell : (extent[2] - extent[0]) / 200)\n\n      const fc = this.gridFeatureCollection(grid, [extent[0], extent[2]], [extent[1], extent[3]])\n      const collection = featureCollection(fc)\n      // console.log(collection)\n      const isobandsResult = isobands(collection, breaks, { zProperty: 'value' })\n      // console.log(isobandsResult)\n      // const sortArea = (a, b) => {\n      //   return area(b) - area(a)\n      // }\n      // // 按照面积对图层进行排序，规避turf的一个bug\n      // isobandsResult.features.sort(sortArea)\n      this.data = isobandsResult\n      return this.$refs.geojsonDatasource\n    },\n    ready ({ cesiumObject }) {\n      this.setPolygonColor(cesiumObject)\n    },\n    setPolygonColor (cesiumObject) {\n      const { breaks, colors, canvasAlpha } = this\n      cesiumObject.entities.values.reduce((pre, cur) => {\n        const value = cur.properties.getValue(Cesium.JulianDate.now).value\n        const breakValue = value.substr(0, value.lastIndexOf('-'))\n        const index = breaks.indexOf(parseFloat(breakValue))\n        cur.polygon.material = Cesium.Color.fromCssColorString(colors[index]).withAlpha(canvasAlpha)\n        cur.polygon.outline = false\n        return true\n      }, [])\n\n      return cesiumObject\n    },\n    gridFeatureCollection (grid, xlim, ylim) {\n      // var range = grid.zlim[1] - grid.zlim[0]\n      let i, j, x, y, z\n      const n = grid.data.length // 列数\n      const m = grid.data[0].length // 行数\n      const pointArray = []\n\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < m; j++) {\n          x = i * grid.width + grid.xlim[0]\n          y = j * grid.width + grid.ylim[0]\n          // z = (grid.data[i][j] - grid.zlim[0]) / range\n          z = grid.data[i][j]\n          // if (z < 0.0) z = 0.0\n          // if (z > 1.0) z = 1.0\n          pointArray.push(point([x, y], { value: z }))\n        }\n      }\n      return pointArray\n    },\n    async mount () {\n      return true\n    },\n    async unmount () {\n      return true\n    }\n  }\n}\n","<template>\n  <i :class=\"$options.name\" style=\"display: none !important\">\n    <vc-datasource-geojson :data=\"data\" :options=\"datasourceOptions\" :show=\"show\" ref=\"geojsonDatasource\" @ready=\"ready\"></vc-datasource-geojson>\n  </i>\n</template>\n<script>\nimport cmp from '../../../mixins/virtualCmp'\nimport kriging from '@sakitam-gis/kriging'\nimport { featureCollection, point } from '@turf/helpers'\nimport isobands from '@turf/isobands'\n// import area from '@turf/area'\nexport default {\n  name: 'vc-kriging-map',\n  data () {\n    return {\n      coordinates: { west: 0, south: 0, east: 0, north: 0 },\n      data: {},\n      datasourceOptions: {\n        clampToGround: true\n      }\n    }\n  },\n  mixins: [cmp],\n  props: {\n    values: Array,\n    lngs: Array,\n    lats: Array,\n    krigingModel: {\n      type: String,\n      default: 'exponential' // gaussian spherical exponential\n    },\n    krigingSigma2: {\n      type: Number,\n      default: 0\n    },\n    krigingAlpha: {\n      type: Number,\n      default: 100\n    },\n    canvasAlpha: {\n      type: Number,\n      default: 1\n    },\n    colors: {\n      type: Array,\n      default: () => {\n        return ['#006837', '#1a9850', '#66bd63', '#a6d96a', '#d9ef8b', '#ffffbf', '#fee08b', '#fdae61', '#f46d43', '#d73027', '#a50026']\n      }\n    },\n    breaks: {\n      type: Array,\n      default: () => {\n        return [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]\n      }\n    },\n    clipCoords: {\n      type: [Array, String],\n      default: () => {\n        return []\n      }\n    },\n    show: {\n      type: Boolean,\n      default: true\n    },\n    cell: Number\n  },\n  methods: {\n    async createCesiumObject () {\n      const { values, lngs, lats, krigingModel, krigingSigma2, breaks, clipCoords, krigingAlpha } = this\n      const variogram = kriging.train(values, lngs, lats, krigingModel, krigingSigma2, krigingAlpha)\n\n      let coordinates = []\n\n      if (clipCoords instanceof Array) {\n        if (clipCoords.length > 0 && clipCoords[0][0]) {\n          // 传的是 geojson 面\n          coordinates = clipCoords\n        } else {\n          // 传的是一个 bounds 数组 (左下和右上)\n          coordinates.push([\n            [clipCoords[0], clipCoords[1]], [clipCoords[0], clipCoords[3]],\n            [clipCoords[2], clipCoords[3]], [clipCoords[2], clipCoords[1]]\n          ])\n        }\n      } else if (typeof clipCoords === 'string') {\n        const requstData = await Cesium.Resource.fetchJson(clipCoords)\n        coordinates = requstData.features[0].geometry.coordinates\n      }\n\n      const coords = []\n      for (let i = 0; i < coordinates[0].length; i++) {\n        for (let j = 0; j < 2; j++) {\n          coords.push(coordinates[0][i][j])\n        }\n      }\n\n      let rectangle\n      if (coords.length > 4) {\n        rectangle = Cesium.PolygonGeometry.computeRectangle({\n          polygonHierarchy: new Cesium.PolygonHierarchy(\n            Cesium.Cartesian3.fromDegreesArray(coords, this.viewer.scene.globe.ellipsoid)\n          )\n        })\n      } else {\n        rectangle = Cesium.Rectangle.fromDegrees(coords[0], coords[1], coords[2], coords[3])\n      }\n      this.coordinates = rectangle\n\n      const extent = [\n        Cesium.Math.toDegrees(rectangle.west),\n        Cesium.Math.toDegrees(rectangle.south),\n        Cesium.Math.toDegrees(rectangle.east),\n        Cesium.Math.toDegrees(rectangle.north)\n      ]\n\n      const grid = kriging.grid(coordinates, variogram, this.cell ? this.cell : (extent[2] - extent[0]) / 200)\n\n      const fc = this.gridFeatureCollection(grid, [extent[0], extent[2]], [extent[1], extent[3]])\n      const collection = featureCollection(fc)\n      // console.log(collection)\n      const isobandsResult = isobands(collection, breaks, { zProperty: 'value' })\n      // console.log(isobandsResult)\n      // const sortArea = (a, b) => {\n      //   return area(b) - area(a)\n      // }\n      // // 按照面积对图层进行排序，规避turf的一个bug\n      // isobandsResult.features.sort(sortArea)\n      this.data = isobandsResult\n      return this.$refs.geojsonDatasource\n    },\n    ready ({ cesiumObject }) {\n      this.setPolygonColor(cesiumObject)\n    },\n    setPolygonColor (cesiumObject) {\n      const { breaks, colors, canvasAlpha } = this\n      cesiumObject.entities.values.reduce((pre, cur) => {\n        const value = cur.properties.getValue(Cesium.JulianDate.now).value\n        const breakValue = value.substr(0, value.lastIndexOf('-'))\n        const index = breaks.indexOf(parseFloat(breakValue))\n        cur.polygon.material = Cesium.Color.fromCssColorString(colors[index]).withAlpha(canvasAlpha)\n        cur.polygon.outline = false\n        return true\n      }, [])\n\n      return cesiumObject\n    },\n    gridFeatureCollection (grid, xlim, ylim) {\n      // var range = grid.zlim[1] - grid.zlim[0]\n      let i, j, x, y, z\n      const n = grid.data.length // 列数\n      const m = grid.data[0].length // 行数\n      const pointArray = []\n\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < m; j++) {\n          x = i * grid.width + grid.xlim[0]\n          y = j * grid.width + grid.ylim[0]\n          // z = (grid.data[i][j] - grid.zlim[0]) / range\n          z = grid.data[i][j]\n          // if (z < 0.0) z = 0.0\n          // if (z > 1.0) z = 1.0\n          pointArray.push(point([x, y], { value: z }))\n        }\n      }\n      return pointArray\n    },\n    async mount () {\n      return true\n    },\n    async unmount () {\n      return true\n    }\n  }\n}\n</script>\n","\nimport VcKrigingMap from './VcKrigingMap.vue'\n// 按需引入该组件时自动引入下面组件才能正常工作\nimport * as GeoJsonDataSource from '../../datasource/geojson'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n  Vue.use(GeoJsonDataSource)\n  Vue.component(VcKrigingMap.name, VcKrigingMap)\n}\n\nexport default plugin\n\nexport {\n  VcKrigingMap,\n  plugin as install\n}\n"],"names":["name","data","coordinates","west","south","east","north","datasourceOptions","clampToGround","mixins","cmp","props","values","Array","lngs","lats","krigingModel","type","String","default","krigingSigma2","Number","krigingAlpha","canvasAlpha","colors","breaks","clipCoords","show","Boolean","cell","methods","createCesiumObject","variogram","kriging","train","length","push","Cesium","Resource","fetchJson","requstData","features","geometry","coords","i","j","rectangle","PolygonGeometry","computeRectangle","polygonHierarchy","PolygonHierarchy","Cartesian3","fromDegreesArray","viewer","scene","globe","ellipsoid","Rectangle","fromDegrees","extent","Math","toDegrees","grid","fc","gridFeatureCollection","collection","featureCollection","isobandsResult","isobands","zProperty","$refs","geojsonDatasource","ready","cesiumObject","setPolygonColor","entities","reduce","pre","cur","value","properties","getValue","JulianDate","now","breakValue","substr","lastIndexOf","index","indexOf","polygon","material","Color","fromCssColorString","withAlpha","outline","xlim","ylim","x","y","z","n","m","pointArray","width","point","mount","unmount","plugin","Vue","installed","use","GeoJsonDataSource","component","VcKrigingMap"],"mappings":"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"}