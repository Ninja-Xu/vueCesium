{"version":3,"file":"EarthGravityModel1996.js","sources":["src/exts/EarthGravityModel1996.js"],"sourcesContent":["\n/**\n * The Earth Gravity Model 1996 (EGM96) geoid.\n * @param {String} gridFileUrl The URL of the WW15MGH.DAC file.\n */\nconst EarthGravityModel1996 = function (gridFileUrl) {\n  this.gridFileUrl = gridFileUrl\n  this.data = undefined\n\n  // These values were determined by inspecting the WW15MGH.DAC file.  We hard-code them here because\n  // we need them available before that file finishes loading.\n  this.minimumHeight = -106.99\n  this.maximumHeight = 85.39\n}\n\n/**\n * Determines if this class will work in the current environment.  It will return false on older browsers without support\n * for typed arrays.\n * @return {Boolean} True if this class may be used in this environment; otherwise, false.\n */\nEarthGravityModel1996.isSupported = function () {\n  return typeof Int16Array !== 'undefined' && typeof Uint8Array !== 'undefined'\n}\n\n/**\n * Gets the height of EGM96 above the surface of the ellipsoid.\n * @param {String} baseUrl The base URL for TerriaJS resources.\n * @param {Number} longitude The longitude.\n * @param {Number} latitude The latitude\n * @return {Promise|Number} A promise, that, when it results The height of mean sea level above the ellipsoid at the specified location.  Negative numbers indicate that mean sea level\n *                  is below the ellipsoid.\n */\nEarthGravityModel1996.prototype.getHeight = function (longitude, latitude) {\n  return getHeightData(this).then(function (data) {\n    return getHeightFromData(data, longitude, latitude)\n  })\n}\n\nEarthGravityModel1996.prototype.getHeights = function (cartographicArray) {\n  return getHeightData(this).then(function (data) {\n    for (let i = 0; i < cartographicArray.length; ++i) {\n      const cartographic = cartographicArray[i]\n      cartographic.height = getHeightFromData(\n        data,\n        cartographic.longitude,\n        cartographic.latitude\n      )\n    }\n    return cartographicArray\n  })\n}\n\nfunction getHeightData (model) {\n  const { defined, when } = Cesium\n  if (!defined(model.data)) {\n    model.data = loadArrayBuffer(model.gridFileUrl)\n  }\n\n  return when(model.data, function (data) {\n    if (!(model.data instanceof Int16Array)) {\n      // Data file is big-endian, all relevant platforms are little endian, so swap the byte order.\n      const byteView = new Uint8Array(data)\n      for (let k = 0; k < byteView.length; k += 2) {\n        const tmp = byteView[k]\n        byteView[k] = byteView[k + 1]\n        byteView[k + 1] = tmp\n      }\n      model.data = new Int16Array(data)\n    }\n\n    return model.data\n  })\n}\n\nfunction getHeightFromData (data, longitude, latitude) {\n  const { Math: CesiumMath } = Cesium\n  let recordIndex = (720 * (CesiumMath.PI_OVER_TWO - latitude)) / Math.PI\n  if (recordIndex < 0) {\n    recordIndex = 0\n  } else if (recordIndex > 720) {\n    recordIndex = 720\n  }\n\n  longitude = CesiumMath.zeroToTwoPi(longitude)\n  let heightIndex = (1440 * longitude) / CesiumMath.TWO_PI\n  if (heightIndex < 0) {\n    heightIndex = 0\n  } else if (heightIndex > 1440) {\n    heightIndex = 1440\n  }\n\n  const i = heightIndex | 0\n  const j = recordIndex | 0\n\n  const xMinusX1 = heightIndex - i\n  const yMinusY1 = recordIndex - j\n  const x2MinusX = 1.0 - xMinusX1\n  const y2MinusY = 1.0 - yMinusY1\n\n  const f11 = getHeightValue(data, j, i)\n  const f21 = getHeightValue(data, j, i + 1)\n  const f12 = getHeightValue(data, j + 1, i)\n  const f22 = getHeightValue(data, j + 1, i + 1)\n\n  return (\n    (f11 * x2MinusX * y2MinusY +\n      f21 * xMinusX1 * y2MinusY +\n      f12 * x2MinusX * yMinusY1 +\n      f22 * xMinusX1 * yMinusY1) /\n    100.0\n  )\n}\n\n// Heights returned by this function are in centimeters.\nfunction getHeightValue (data, recordIndex, heightIndex) {\n  if (recordIndex > 720) {\n    recordIndex = 720\n  } else if (recordIndex < 0) {\n    recordIndex = 0\n  }\n\n  if (heightIndex > 1439) {\n    heightIndex -= 1440\n  } else if (heightIndex < 0) {\n    heightIndex += 1440\n  }\n\n  return data[recordIndex * 1440 + heightIndex]\n}\n\nfunction loadArrayBuffer (urlOrResource) {\n  const { Resource } = Cesium\n  const resource = Resource.createIfNeeded(urlOrResource)\n  return resource.fetchArrayBuffer()\n}\n\n// module.exports = EarthGravityModel1996\nexport default EarthGravityModel1996\n"],"names":["EarthGravityModel1996","gridFileUrl","data","undefined","minimumHeight","maximumHeight","isSupported","Int16Array","Uint8Array","prototype","getHeight","longitude","latitude","getHeightData","then","getHeightFromData","getHeights","cartographicArray","i","length","cartographic","height","model","Cesium","defined","when","loadArrayBuffer","byteView","k","tmp","CesiumMath","Math","recordIndex","PI_OVER_TWO","PI","zeroToTwoPi","heightIndex","TWO_PI","j","xMinusX1","yMinusY1","x2MinusX","y2MinusY","f11","getHeightValue","f21","f12","f22","urlOrResource","Resource","resource","createIfNeeded","fetchArrayBuffer"],"mappings":";;;;;;;;;;;AACA;AACA;AACA;AACA;AACA,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAUC,WAAV,EAAuB;AACnD,OAAKA,WAAL,GAAmBA,WAAnB;AACA,OAAKC,IAAL,GAAYC,SAAZ,CAFmD;AAKnD;;AACA,OAAKC,aAAL,GAAqB,CAAC,MAAtB;AACA,OAAKC,aAAL,GAAqB,KAArB;AACD,CARD;AAUA;AACA;AACA;AACA;AACA;;;AACAL,qBAAqB,CAACM,WAAtB,GAAoC,YAAY;AAC9C,SAAO,OAAOC,UAAP,KAAsB,WAAtB,IAAqC,OAAOC,UAAP,KAAsB,WAAlE;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAR,qBAAqB,CAACS,SAAtB,CAAgCC,SAAhC,GAA4C,UAAUC,SAAV,EAAqBC,QAArB,EAA+B;AACzE,SAAOC,aAAa,CAAC,IAAD,CAAb,CAAoBC,IAApB,CAAyB,UAAUZ,IAAV,EAAgB;AAC9C,WAAOa,iBAAiB,CAACb,IAAD,EAAOS,SAAP,EAAkBC,QAAlB,CAAxB;AACD,GAFM,CAAP;AAGD,CAJD;;AAMAZ,qBAAqB,CAACS,SAAtB,CAAgCO,UAAhC,GAA6C,UAAUC,iBAAV,EAA6B;AACxE,SAAOJ,aAAa,CAAC,IAAD,CAAb,CAAoBC,IAApB,CAAyB,UAAUZ,IAAV,EAAgB;AAC9C,SAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,iBAAiB,CAACE,MAAtC,EAA8C,EAAED,CAAhD,EAAmD;AACjD,UAAME,YAAY,GAAGH,iBAAiB,CAACC,CAAD,CAAtC;AACAE,MAAAA,YAAY,CAACC,MAAb,GAAsBN,iBAAiB,CACrCb,IADqC,EAErCkB,YAAY,CAACT,SAFwB,EAGrCS,YAAY,CAACR,QAHwB,CAAvC;AAKD;;AACD,WAAOK,iBAAP;AACD,GAVM,CAAP;AAWD,CAZD;;AAcA,SAASJ,aAAT,CAAwBS,KAAxB,EAA+B;AAC7B,gBAA0BC,MAA1B;AAAA,MAAQC,OAAR,WAAQA,OAAR;AAAA,MAAiBC,IAAjB,WAAiBA,IAAjB;;AACA,MAAI,CAACD,OAAO,CAACF,KAAK,CAACpB,IAAP,CAAZ,EAA0B;AACxBoB,IAAAA,KAAK,CAACpB,IAAN,GAAawB,eAAe,CAACJ,KAAK,CAACrB,WAAP,CAA5B;AACD;;AAED,SAAOwB,IAAI,CAACH,KAAK,CAACpB,IAAP,EAAa,UAAUA,IAAV,EAAgB;AACtC,QAAI,EAAEoB,KAAK,CAACpB,IAAN,YAAsBK,UAAxB,CAAJ,EAAyC;AACvC;AACA,UAAMoB,QAAQ,GAAG,IAAInB,UAAJ,CAAeN,IAAf,CAAjB;;AACA,WAAK,IAAI0B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACR,MAA7B,EAAqCS,CAAC,IAAI,CAA1C,EAA6C;AAC3C,YAAMC,GAAG,GAAGF,QAAQ,CAACC,CAAD,CAApB;AACAD,QAAAA,QAAQ,CAACC,CAAD,CAAR,GAAcD,QAAQ,CAACC,CAAC,GAAG,CAAL,CAAtB;AACAD,QAAAA,QAAQ,CAACC,CAAC,GAAG,CAAL,CAAR,GAAkBC,GAAlB;AACD;;AACDP,MAAAA,KAAK,CAACpB,IAAN,GAAa,IAAIK,UAAJ,CAAeL,IAAf,CAAb;AACD;;AAED,WAAOoB,KAAK,CAACpB,IAAb;AACD,GAbU,CAAX;AAcD;;AAED,SAASa,iBAAT,CAA4Bb,IAA5B,EAAkCS,SAAlC,EAA6CC,QAA7C,EAAuD;AACrD,iBAA6BW,MAA7B;AAAA,MAAcO,UAAd,YAAQC,IAAR;AACA,MAAIC,WAAW,GAAI,OAAOF,UAAU,CAACG,WAAX,GAAyBrB,QAAhC,CAAD,GAA8CmB,IAAI,CAACG,EAArE;;AACA,MAAIF,WAAW,GAAG,CAAlB,EAAqB;AACnBA,IAAAA,WAAW,GAAG,CAAd;AACD,GAFD,MAEO,IAAIA,WAAW,GAAG,GAAlB,EAAuB;AAC5BA,IAAAA,WAAW,GAAG,GAAd;AACD;;AAEDrB,EAAAA,SAAS,GAAGmB,UAAU,CAACK,WAAX,CAAuBxB,SAAvB,CAAZ;AACA,MAAIyB,WAAW,GAAI,OAAOzB,SAAR,GAAqBmB,UAAU,CAACO,MAAlD;;AACA,MAAID,WAAW,GAAG,CAAlB,EAAqB;AACnBA,IAAAA,WAAW,GAAG,CAAd;AACD,GAFD,MAEO,IAAIA,WAAW,GAAG,IAAlB,EAAwB;AAC7BA,IAAAA,WAAW,GAAG,IAAd;AACD;;AAED,MAAMlB,CAAC,GAAGkB,WAAW,GAAG,CAAxB;AACA,MAAME,CAAC,GAAGN,WAAW,GAAG,CAAxB;AAEA,MAAMO,QAAQ,GAAGH,WAAW,GAAGlB,CAA/B;AACA,MAAMsB,QAAQ,GAAGR,WAAW,GAAGM,CAA/B;AACA,MAAMG,QAAQ,GAAG,MAAMF,QAAvB;AACA,MAAMG,QAAQ,GAAG,MAAMF,QAAvB;AAEA,MAAMG,GAAG,GAAGC,cAAc,CAAC1C,IAAD,EAAOoC,CAAP,EAAUpB,CAAV,CAA1B;AACA,MAAM2B,GAAG,GAAGD,cAAc,CAAC1C,IAAD,EAAOoC,CAAP,EAAUpB,CAAC,GAAG,CAAd,CAA1B;AACA,MAAM4B,GAAG,GAAGF,cAAc,CAAC1C,IAAD,EAAOoC,CAAC,GAAG,CAAX,EAAcpB,CAAd,CAA1B;AACA,MAAM6B,GAAG,GAAGH,cAAc,CAAC1C,IAAD,EAAOoC,CAAC,GAAG,CAAX,EAAcpB,CAAC,GAAG,CAAlB,CAA1B;AAEA,SACE,CAACyB,GAAG,GAAGF,QAAN,GAAiBC,QAAjB,GACCG,GAAG,GAAGN,QAAN,GAAiBG,QADlB,GAECI,GAAG,GAAGL,QAAN,GAAiBD,QAFlB,GAGCO,GAAG,GAAGR,QAAN,GAAiBC,QAHnB,IAIA,KALF;AAOD;;;AAGD,SAASI,cAAT,CAAyB1C,IAAzB,EAA+B8B,WAA/B,EAA4CI,WAA5C,EAAyD;AACvD,MAAIJ,WAAW,GAAG,GAAlB,EAAuB;AACrBA,IAAAA,WAAW,GAAG,GAAd;AACD,GAFD,MAEO,IAAIA,WAAW,GAAG,CAAlB,EAAqB;AAC1BA,IAAAA,WAAW,GAAG,CAAd;AACD;;AAED,MAAII,WAAW,GAAG,IAAlB,EAAwB;AACtBA,IAAAA,WAAW,IAAI,IAAf;AACD,GAFD,MAEO,IAAIA,WAAW,GAAG,CAAlB,EAAqB;AAC1BA,IAAAA,WAAW,IAAI,IAAf;AACD;;AAED,SAAOlC,IAAI,CAAC8B,WAAW,GAAG,IAAd,GAAqBI,WAAtB,CAAX;AACD;;AAED,SAASV,eAAT,CAA0BsB,aAA1B,EAAyC;AACvC,iBAAqBzB,MAArB;AAAA,MAAQ0B,QAAR,YAAQA,QAAR;AACA,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,cAAT,CAAwBH,aAAxB,CAAjB;AACA,SAAOE,QAAQ,CAACE,gBAAT,EAAP;AACD;;;;"}