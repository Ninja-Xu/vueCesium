{"version":3,"file":"BaiduMapMercatorProjection.js","sources":["src/exts/imageryProvider/BaiduMapMercatorProjection.js"],"sourcesContent":["import Projection from './Projection'\nimport Point from './Point'\nimport Pixel from './Pixel'\n\n/**\n * Projection used by [Baidu Map]{@link https://github.com/openlayers/openlayers/issues/3522}\n */\nclass BaiduMapMercatorProjection extends Projection {\n  // constructor () {\n  //   super()\n  // }\n\n  static EARTHRADIUS = 6370996.81\n  static MCBAND = [12890594.86, 8362377.87, 5591021, 3481989.83, 1678043.12, 0]\n  static LLBAND = [75, 60, 45, 30, 15, 0]\n  static MC2LL = [\n    [\n      1.410526172116255e-8,\n      8.98305509648872e-6,\n      -1.9939833816331,\n      2.009824383106796e2,\n      -1.872403703815547e2,\n      91.6087516669843,\n      -23.38765649603339,\n      2.57121317296198,\n      -0.03801003308653,\n      1.73379812e7\n    ],\n    [\n      -7.435856389565537e-9,\n      8.983055097726239e-6,\n      -0.78625201886289,\n      96.32687599759846,\n      -1.85204757529826,\n      -59.36935905485877,\n      47.40033549296737,\n      -16.50741931063887,\n      2.28786674699375,\n      1.026014486e7\n    ],\n    [\n      -3.030883460898826e-8,\n      8.98305509983578e-6,\n      0.30071316287616,\n      59.74293618442277,\n      7.357984074871,\n      -25.38371002664745,\n      13.45380521110908,\n      -3.29883767235584,\n      0.32710905363475,\n      6.85681737e6\n    ],\n    [\n      -1.981981304930552e-8,\n      8.983055099779535e-6,\n      0.03278182852591,\n      40.31678527705744,\n      0.65659298677277,\n      -4.44255534477492,\n      0.85341911805263,\n      0.12923347998204,\n      -0.04625736007561,\n      4.48277706e6\n    ],\n    [\n      3.09191371068437e-9,\n      8.983055096812155e-6,\n      0.00006995724062,\n      23.10934304144901,\n      -0.00023663490511,\n      -0.6321817810242,\n      -0.00663494467273,\n      0.03430082397953,\n      -0.00466043876332,\n      2.5551644e6\n    ],\n    [\n      2.890871144776878e-9,\n      8.983055095805407e-6,\n      -0.00000003068298,\n      7.47137025468032,\n      -0.00000353937994,\n      -0.02145144861037,\n      -0.00001234426596,\n      0.00010322952773,\n      -0.00000323890364,\n      8.260885e5\n    ]\n  ]\n\n  static LL2MC = [\n    [\n      -0.0015702102444,\n      1.113207020616939e5,\n      1.704480524535203e15,\n      -1.033898737604234e16,\n      2.611266785660388e16,\n      -3.51496691766537e16,\n      2.659570071840392e16,\n      -1.072501245418824e16,\n      1.800819912950474e15,\n      82.5\n    ],\n    [\n      8.277824516172526e-4,\n      1.113207020463578e5,\n      // eslint-disable-next-line no-loss-of-precision\n      6.477955746671608e8,\n      -4.082003173641316e9,\n      1.077490566351142e10,\n      -1.517187553151559e10,\n      1.205306533862167e10,\n      -5.124939663577472e9,\n      9.133119359512032e8,\n      67.5\n    ],\n    [\n      0.00337398766765,\n      1.113207020202162e5,\n      4.481351045890365e6,\n      -2.339375119931662e7,\n      7.968221547186455e7,\n      -1.159649932797253e8,\n      9.723671115602145e7,\n      -4.366194633752821e7,\n      8.477230501135234e6,\n      52.5\n    ],\n    [\n      0.00220636496208,\n      1.113207020209128e5,\n      5.175186112841131e4,\n      3.796837749470245e6,\n      9.920137397791013e5,\n      -1.22195221711287e6,\n      1.340652697009075e6,\n      -6.209436990984312e5,\n      1.444169293806241e5,\n      37.5\n    ],\n    [\n      -3.441963504368392e-4,\n      1.113207020576856e5,\n      2.782353980772752e2,\n      2.485758690035394e6,\n      6.070750963243378e3,\n      5.482118345352118e4,\n      9.540606633304236e3,\n      -2.71055326746645e3,\n      1.405483844121726e3,\n      22.5\n    ],\n    [\n      -3.218135878613132e-4,\n      1.113207020701615e5,\n      0.00369383431289,\n      8.237256402795718e5,\n      0.46104986909093,\n      2.351343141331292e3,\n      1.58060784298199,\n      8.77738589078284,\n      0.37238884252424,\n      7.45\n    ]\n  ]\n\n  /**\n   * 根据平面直角坐标计算两点间距离;\n   * @param {Point} point1 平面直角点坐标1\n   * @param {Point} point2 平面直角点坐标2;\n   * @return {Number} 返回两点间的距离\n   */\n  static getDistanceByMC = function (point1, point2) {\n    if (!point1 || !point2) return 0\n    point1 = this.convertMC2LL(point1)\n    if (!point1) return 0\n    const x1 = this.toRadians(point1.lng)\n    const y1 = this.toRadians(point1.lat)\n    point2 = this.convertMC2LL(point2)\n    if (!point2) return 0\n    const x2 = this.toRadians(point2.lng)\n    const y2 = this.toRadians(point2.lat)\n    return this.getDistance(x1, x2, y1, y2)\n  }\n\n  /**\n   * 根据经纬度坐标计算两点间距离;\n   * @param {Point} point1 经纬度点坐标1\n   * @param {Point} point2 经纬度点坐标2;\n   * @return {Number} 返回两点间的距离\n   */\n  static getDistanceByLL = function (point1, point2) {\n    if (!point1 || !point2) return 0\n    point1.lng = this.getLoop(point1.lng, -180, 180)\n    point1.lat = this.getRange(point1.lat, -74, 74)\n    point2.lng = this.getLoop(point2.lng, -180, 180)\n    point2.lat = this.getRange(point2.lat, -74, 74)\n    const x1 = this.toRadians(point1.lng)\n    const y1 = this.toRadians(point1.lat)\n    const x2 = this.toRadians(point2.lng)\n    const y2 = this.toRadians(point2.lat)\n    return this.getDistance(x1, x2, y1, y2)\n  }\n\n  /**\n   * 平面直角坐标转换成经纬度坐标;\n   * @param {Point} point 平面直角坐标\n   * @return {Point} 返回经纬度坐标\n   */\n  static convertMC2LL = function (point) {\n    let factor\n    const temp = new Point(Math.abs(point.lng), Math.abs(point.lat))\n    for (let i = 0; i < this.MCBAND.length; i++) {\n      if (temp.lat >= this.MCBAND[i]) {\n        factor = this.MC2LL[i]\n        break\n      }\n    }\n    const lnglat = this.convertor(point, factor)\n    return new Point(lnglat.lng.toFixed(6), lnglat.lat.toFixed(6))\n  }\n\n  /**\n   * 经纬度坐标转换成平面直角坐标;\n   * @param {Point} point 经纬度坐标\n   * @return {Point} 返回平面直角坐标\n   */\n  static convertLL2MC = function (point) {\n    let factor\n    point.lng = this.getLoop(point.lng, -180, 180)\n    point.lat = this.getRange(point.lat, -74, 74)\n    const temp = new Point(point.lng, point.lat)\n    for (let i = 0; i < this.LLBAND.length; i++) {\n      if (temp.lat >= this.LLBAND[i]) {\n        factor = this.LL2MC[i]\n        break\n      }\n    }\n    if (!factor) {\n      for (let i = this.LLBAND.length - 1; i >= 0; i--) {\n        if (temp.lat <= -this.LLBAND[i]) {\n          factor = this.LL2MC[i]\n          break\n        }\n      }\n    }\n    const mc = this.convertor(point, factor)\n    return new Point(mc.lng.toFixed(2), mc.lat.toFixed(2))\n  }\n\n  static convertor = function (fromPoint, factor) {\n    if (!fromPoint || !factor) {\n      return\n    }\n    let x = factor[0] + factor[1] * Math.abs(fromPoint.lng)\n    const temp = Math.abs(fromPoint.lat) / factor[9]\n    let y =\n      factor[2] +\n      factor[3] * temp +\n      factor[4] * temp * temp +\n      factor[5] * temp * temp * temp +\n      factor[6] * temp * temp * temp * temp +\n      factor[7] * temp * temp * temp * temp * temp +\n      factor[8] * temp * temp * temp * temp * temp * temp\n    x *= fromPoint.lng < 0 ? -1 : 1\n    y *= fromPoint.lat < 0 ? -1 : 1\n    return new Point(x, y)\n  }\n\n  static getDistance = function (x1, x2, y1, y2) {\n    return this.EARTHRADIUS * Math.acos(Math.sin(y1) * Math.sin(y2) + Math.cos(y1) * Math.cos(y2) * Math.cos(x2 - x1))\n  }\n\n  static toRadians = function (angdeg) {\n    return (Math.PI * angdeg) / 180\n  }\n\n  static toDegrees = function (angrad) {\n    return (180 * angrad) / Math.PI\n  }\n\n  static getRange = function (v, a, b) {\n    if (a != null) {\n      v = Math.max(v, a)\n    }\n    if (b != null) {\n      v = Math.min(v, b)\n    }\n    return v\n  }\n\n  static getLoop = function (v, a, b) {\n    while (v > b) {\n      v -= b - a\n    }\n    while (v < a) {\n      v += b - a\n    }\n    return v\n  }\n\n  /**\n   * 经纬度变换至墨卡托坐标\n   * @param Point 经纬度\n   * @return Point 墨卡托\n   */\n  lngLatToMercator (point) {\n    return BaiduMapMercatorProjection.convertLL2MC(point)\n  }\n\n  /**\n   * 球面到平面坐标\n   * @param Point 球面坐标\n   * @return Pixel 平面坐标\n   */\n  lngLatToPoint (point) {\n    const mercator = BaiduMapMercatorProjection.convertLL2MC(point)\n    return new Pixel(mercator.lng, mercator.lat)\n  }\n\n  /**\n   * 墨卡托变换至经纬度\n   * @param Point 墨卡托\n   * @returns Point 经纬度\n   */\n  mercatorToLngLat (point) {\n    return BaiduMapMercatorProjection.convertMC2LL(point)\n  }\n\n  /**\n   * 平面到球面坐标\n   * @param Pixel 平面坐标\n   * @returns Point 球面坐标\n   */\n  pointToLngLat (point) {\n    const mercator = new Point(point.x, point.y)\n    return BaiduMapMercatorProjection.convertMC2LL(mercator)\n  }\n\n  /**\n   * 地理坐标转换至像素坐标\n   * @param Point 地理坐标\n   * @param Number 级别\n   * @param Point 地图中心点，注意为了保证没有误差，这里需要传递墨卡托坐标\n   * @param Size 地图容器大小\n   * @return Pixel 像素坐标\n   */\n  pointToPixel (point, zoom, mapCenter, mapSize, curCity) {\n    if (!point) {\n      return\n    }\n    point = this.lngLatToMercator(point, curCity)\n    mapCenter = this.lngLatToMercator(mapCenter)\n    const zoomUnits = this.getZoomUnits(zoom)\n    const x = Math.round((point.lng - mapCenter.lng) / zoomUnits + mapSize.width / 2)\n    const y = Math.round((mapCenter.lat - point.lat) / zoomUnits + mapSize.height / 2)\n    return new Pixel(x, y)\n  }\n\n  /**\n   * 像素坐标转换至地理坐标\n   * @param Pixel 像素坐标\n   * @param Number 级别\n   * @param Point 地图中心点，注意为了保证没有误差，这里需要传递墨卡托坐标\n   * @param Size 地图容器大小\n   * @return Point 地理坐标\n   */\n  pixelToPoint (pixel, zoom, mapCenter, mapSize, curCity) {\n    if (!pixel) {\n      return\n    }\n    const zoomUnits = this.getZoomUnits(zoom)\n    const lng = mapCenter.lng + zoomUnits * (pixel.x - mapSize.width / 2)\n    const lat = mapCenter.lat - zoomUnits * (pixel.y - mapSize.height / 2)\n    const point = new Point(lng, lat)\n    return this.mercatorToLngLat(point, curCity)\n  }\n\n  getZoomUnits (zoom) {\n    return Math.pow(2, 18 - zoom)\n  }\n}\n\nexport default BaiduMapMercatorProjection\n"],"names":["BaiduMapMercatorProjection","point","convertLL2MC","mercator","Pixel","lng","lat","convertMC2LL","Point","x","y","zoom","mapCenter","mapSize","curCity","lngLatToMercator","zoomUnits","getZoomUnits","Math","round","width","height","pixel","mercatorToLngLat","pow","Projection","point1","point2","x1","toRadians","y1","x2","y2","getDistance","getLoop","getRange","factor","temp","abs","i","MCBAND","length","MC2LL","lnglat","convertor","toFixed","LLBAND","LL2MC","mc","fromPoint","EARTHRADIUS","acos","sin","cos","angdeg","PI","angrad","v","a","b","max","min"],"mappings":"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"}