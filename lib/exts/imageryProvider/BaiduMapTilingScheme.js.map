{"version":3,"file":"BaiduMapTilingScheme.js","sources":["src/exts/imageryProvider/BaiduMapTilingScheme.js"],"sourcesContent":["import BaiduMapMercatorProjection from './BaiduMapMercatorProjection'\nimport Point from './Point'\nimport * as coordtransform from '../../utils/coordtransform'\n\n/**\n * A tiling scheme for geometry referenced to a BaiduMapMercatorProjection {@link https://cesium.com/docs/cesiumjs-ref-doc/WebMercatorTilingScheme.html}\n * {@link https://github.com/openlayers/openlayers/issues/3522#issuecomment-570493906}\n */\nclass BaiduMapMercatorTilingScheme {\n  constructor (options) {\n    const { defaultValue, Ellipsoid, WebMercatorProjection, Cartesian2, Cartographic, Math: CesiumMath, Rectangle } = Cesium\n    options = options || {}\n    this._ellipsoid = defaultValue(options.ellipsoid, Ellipsoid.WGS84)\n    this._projection = new WebMercatorProjection(this._ellipsoid)\n    const projection = new BaiduMapMercatorProjection()\n    this._projection.project = function (cartographic, result) {\n      result = result || {}\n\n      if (options.toWGS84) {\n        result = coordtransform.wgs84togcj02(\n          CesiumMath.toDegrees(cartographic.longitude),\n          CesiumMath.toDegrees(cartographic.latitude)\n        )\n        result = coordtransform.gcj02tobd09(result[0], result[1])\n      } else {\n        result = coordtransform.gcj02tobd09(\n          CesiumMath.toDegrees(cartographic.longitude),\n          CesiumMath.toDegrees(cartographic.latitude)\n        )\n      }\n      result[0] = Math.min(result[0], 180)\n      result[0] = Math.max(result[0], -180)\n      result[1] = Math.min(result[1], 74.000022)\n      result[1] = Math.max(result[1], -71.988531)\n      result = projection.lngLatToPoint(new Point(result[0], result[1]))\n      return new Cartesian2(result.x, result.y)\n    }\n\n    this._projection.unproject = function (cartographic, result) {\n      result = result || {}\n      result = projection.mercatorToLngLat(new Point(cartographic.x, cartographic.y))\n      result[0] = ((result[0] + 180) % 360) - 180\n      if (options.toWGS84) {\n        result = coordtransform.bd09togcj02(result.lng, result.lat)\n        result = coordtransform.gcj02towgs84(result[0], result[1])\n      } else {\n        result = coordtransform.bd09togcj02(result.lng, result.lat)\n      }\n      return new Cartographic(Cesium.Math.toRadians(result[0]), Cesium.Math.toRadians(result[1]))\n    }\n\n    this._rectangleSouthwestInMeters = new Cartesian2(-20037726.37, -12474104.17)\n    this._rectangleNortheastInMeters = new Cartesian2(20037726.37, 12474104.17)\n    const rectangleSouthwestInMeters = this._projection.unproject(this._rectangleSouthwestInMeters)\n    const rectangleNortheastInMeters = this._projection.unproject(this._rectangleNortheastInMeters)\n    this._rectangle = new Rectangle(\n      rectangleSouthwestInMeters.longitude,\n      rectangleSouthwestInMeters.latitude,\n      rectangleNortheastInMeters.longitude,\n      rectangleNortheastInMeters.latitude\n    )\n\n    this.resolutions = []\n    for (let i = 0; i < 19; i++) {\n      this.resolutions[i] = 256 * Math.pow(2, 18 - i)\n    }\n  }\n\n  getNumberOfXTilesAtLevel (level) {\n    return 1 << level\n  }\n\n  getNumberOfYTilesAtLevel (level) {\n    return 1 << level\n  }\n\n  rectangleToNativeRectangle (rectangle, result) {\n    const { defined, Rectangle } = Cesium\n    const projection = this._projection\n    const southwest = projection.project(Rectangle.southwest(rectangle))\n    const northeast = projection.project(Rectangle.northeast(rectangle))\n\n    if (!defined(result)) {\n      return new Rectangle(southwest.x, southwest.y, northeast.x, northeast.y)\n    }\n\n    result.west = southwest.x\n    result.south = southwest.y\n    result.east = northeast.x\n    result.north = northeast.y\n    return result\n  }\n\n  tileXYToNativeRectangle (x, y, level, result) {\n    const { defined, Rectangle } = Cesium\n    const tileWidth = this.resolutions[level]\n    const west = x * tileWidth\n    const east = (x + 1) * tileWidth\n    const north = ((y = -y) + 1) * tileWidth\n    const south = y * tileWidth\n\n    if (!defined(result)) {\n      return new Rectangle(west, south, east, north)\n    }\n\n    result.west = west\n    result.south = south\n    result.east = east\n    result.north = north\n    return result\n  }\n\n  tileXYToRectangle (x, y, level, result) {\n    const { Cartesian2 } = Cesium\n    const nativeRectangle = this.tileXYToNativeRectangle(x, y, level, result)\n\n    const projection = this._projection\n    const southwest = projection.unproject(new Cartesian2(nativeRectangle.west, nativeRectangle.south))\n    const northeast = projection.unproject(new Cartesian2(nativeRectangle.east, nativeRectangle.north))\n\n    nativeRectangle.west = southwest.longitude\n    nativeRectangle.south = southwest.latitude\n    nativeRectangle.east = northeast.longitude\n    nativeRectangle.north = northeast.latitude\n    return nativeRectangle\n  }\n\n  positionToTileXY (position, level, result) {\n    const { Rectangle, defined, Cartesian2 } = Cesium\n    const rectangle = this._rectangle\n    if (!Rectangle.contains(rectangle, position)) {\n      // outside the bounds of the tiling scheme\n      return undefined\n    }\n\n    const projection = this._projection\n    const webMercatorPosition = projection.project(position)\n    if (!defined(webMercatorPosition)) {\n      return undefined\n    }\n\n    const tileWidth = this.resolutions[level]\n    const xTileCoordinate = Math.floor(webMercatorPosition.x / tileWidth)\n    const yTileCoordinate = -Math.floor(webMercatorPosition.y / tileWidth)\n\n    if (!defined(result)) {\n      return new Cartesian2(xTileCoordinate, yTileCoordinate)\n    }\n\n    result.x = xTileCoordinate\n    result.y = yTileCoordinate\n    return result\n  }\n\n  get ellipsoid () {\n    return this._ellipsoid\n  }\n\n  get rectangle () {\n    return this._rectangle\n  }\n\n  get projection () {\n    return this._projection\n  }\n}\n\nexport default BaiduMapMercatorTilingScheme\n"],"names":["BaiduMapMercatorTilingScheme","options","Cesium","defaultValue","Ellipsoid","WebMercatorProjection","Cartesian2","Cartographic","CesiumMath","Math","Rectangle","_ellipsoid","ellipsoid","WGS84","_projection","projection","BaiduMapMercatorProjection","project","cartographic","result","toWGS84","coordtransform","toDegrees","longitude","latitude","min","max","lngLatToPoint","Point","x","y","unproject","mercatorToLngLat","lng","lat","toRadians","_rectangleSouthwestInMeters","_rectangleNortheastInMeters","rectangleSouthwestInMeters","rectangleNortheastInMeters","_rectangle","resolutions","i","pow","level","rectangle","defined","southwest","northeast","west","south","east","north","tileWidth","nativeRectangle","tileXYToNativeRectangle","position","contains","undefined","webMercatorPosition","xTileCoordinate","floor","yTileCoordinate"],"mappings":"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"}