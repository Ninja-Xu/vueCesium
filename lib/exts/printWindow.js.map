{"version":3,"file":"printWindow.js","sources":["src/exts/printWindow.js"],"sourcesContent":["\n/**\n * Tells the web browser to print a given window, which my be an iframe window, and\n * returns a promise that resolves when printing is safely over so that, for example\n * the window can be removed.\n * @param {Window} windowToPrint The window to print.\n * @returns {Promise} A promise that resolves when printing is safely over. The prommise is rejected if\n *                    there is no indication that the browser's print\n */\nfunction printWindow (windowToPrint) {\n  const { when } = Cesium\n  const deferred = when.defer()\n  let printInProgressCount = 0\n\n  const timeout = setTimeout(function () {\n    deferred.reject(false\n      // new TerriaError({\n      //   title: i18next.t('core.printWindow.errorTitle'),\n      //   message: i18next.t('core.printWindow.errorMessage')\n      // })\n    )\n  }, 10000)\n\n  function cancelTimeout () {\n    clearTimeout(timeout)\n  }\n\n  function resolveIfZero () {\n    if (printInProgressCount <= 0) {\n      deferred.resolve()\n    }\n  }\n\n  if (windowToPrint.matchMedia) {\n    windowToPrint.matchMedia('print').addListener(function (evt) {\n      cancelTimeout()\n      if (evt.matches) {\n        // console.log(i18next.t('core.printWindow.printMediaStart'))\n        ++printInProgressCount\n      } else {\n        // console.log(i18next.t('core.printWindow.printMediaEnd'))\n        --printInProgressCount\n        resolveIfZero()\n      }\n    })\n  }\n\n  windowToPrint.onbeforeprint = function () {\n    cancelTimeout()\n    // console.log(i18next.t('core.printWindow.onbeforeprint'))\n    ++printInProgressCount\n  }\n  windowToPrint.onafterprint = function () {\n    cancelTimeout()\n    // console.log(i18next.t('core.printWindow.onafterprint'))\n    --printInProgressCount\n    resolveIfZero()\n  }\n\n  // First try printing with execCommand, because, in IE11, `printWindow.print()`\n  // prints the entire page instead of just the embedded iframe (if the window\n  // is an iframe, anyway).\n  const result = windowToPrint.document.execCommand('print', true, null)\n  if (!result) {\n    windowToPrint.print()\n  }\n\n  return deferred.promise\n}\n\nexport default printWindow\n"],"names":["printWindow","windowToPrint","Cesium","when","deferred","defer","printInProgressCount","timeout","setTimeout","reject","cancelTimeout","clearTimeout","resolveIfZero","resolve","matchMedia","addListener","evt","matches","onbeforeprint","onafterprint","result","document","execCommand","print","promise"],"mappings":";;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAT,CAAsBC,aAAtB,EAAqC;AACnC,gBAAiBC,MAAjB;AAAA,MAAQC,IAAR,WAAQA,IAAR;AACA,MAAMC,QAAQ,GAAGD,IAAI,CAACE,KAAL,EAAjB;AACA,MAAIC,oBAAoB,GAAG,CAA3B;AAEA,MAAMC,OAAO,GAAGC,UAAU,CAAC,YAAY;AACrCJ,IAAAA,QAAQ,CAACK,MAAT,CAAgB,KAAhB;AAEE;AACA;AACA;AAJF;AAMD,GAPyB,EAOvB,KAPuB,CAA1B;;AASA,WAASC,aAAT,GAA0B;AACxBC,IAAAA,YAAY,CAACJ,OAAD,CAAZ;AACD;;AAED,WAASK,aAAT,GAA0B;AACxB,QAAIN,oBAAoB,IAAI,CAA5B,EAA+B;AAC7BF,MAAAA,QAAQ,CAACS,OAAT;AACD;AACF;;AAED,MAAIZ,aAAa,CAACa,UAAlB,EAA8B;AAC5Bb,IAAAA,aAAa,CAACa,UAAd,CAAyB,OAAzB,EAAkCC,WAAlC,CAA8C,UAAUC,GAAV,EAAe;AAC3DN,MAAAA,aAAa;;AACb,UAAIM,GAAG,CAACC,OAAR,EAAiB;AACf;AACA,UAAEX,oBAAF;AACD,OAHD,MAGO;AACL;AACA,UAAEA,oBAAF;AACAM,QAAAA,aAAa;AACd;AACF,KAVD;AAWD;;AAEDX,EAAAA,aAAa,CAACiB,aAAd,GAA8B,YAAY;AACxCR,IAAAA,aAAa,GAD2B;;AAGxC,MAAEJ,oBAAF;AACD,GAJD;;AAKAL,EAAAA,aAAa,CAACkB,YAAd,GAA6B,YAAY;AACvCT,IAAAA,aAAa,GAD0B;;AAGvC,MAAEJ,oBAAF;AACAM,IAAAA,aAAa;AACd,GALD,CA3CmC;AAmDnC;AACA;;;AACA,MAAMQ,MAAM,GAAGnB,aAAa,CAACoB,QAAd,CAAuBC,WAAvB,CAAmC,OAAnC,EAA4C,IAA5C,EAAkD,IAAlD,CAAf;;AACA,MAAI,CAACF,MAAL,EAAa;AACXnB,IAAAA,aAAa,CAACsB,KAAd;AACD;;AAED,SAAOnB,QAAQ,CAACoB,OAAhB;AACD;;;;"}