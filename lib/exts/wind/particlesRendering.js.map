{"version":3,"file":"particlesRendering.js","sources":["src/exts/wind/particlesRendering.js"],"sourcesContent":["import Util from './util'\nimport CustomPrimitive from './customPrimitive'\nimport { segmentDrawVert, segmentDrawFrag, trailDrawFrag, fullscreenVert, screenDrawFrag } from './glsl'\n\nclass ParticlesRendering {\n  constructor (context, data, particleSystemOptions, viewerParameters, particlesComputing) {\n    this.createRenderingTextures(context, data)\n    this.createRenderingFramebuffers(context)\n    this.createRenderingPrimitives(\n      context,\n      particleSystemOptions,\n      viewerParameters,\n      particlesComputing\n    )\n  }\n\n  createRenderingTextures (context, data) {\n    const colorTextureOptions = {\n      context: context,\n      width: context.drawingBufferWidth,\n      height: context.drawingBufferHeight,\n      pixelFormat: Cesium.PixelFormat.RGBA,\n      pixelDatatype: Cesium.PixelDatatype.UNSIGNED_BYTE\n    }\n    const depthTextureOptions = {\n      context: context,\n      width: context.drawingBufferWidth,\n      height: context.drawingBufferHeight,\n      pixelFormat: Cesium.PixelFormat.DEPTH_COMPONENT,\n      pixelDatatype: Cesium.PixelDatatype.UNSIGNED_INT\n    }\n    const colorTableTextureOptions = {\n      context: context,\n      width: data.colorTable.colorNum,\n      height: 1,\n      pixelFormat: Cesium.PixelFormat.RGB,\n      pixelDatatype: Cesium.PixelDatatype.FLOAT,\n      sampler: new Cesium.Sampler({\n        minificationFilter: Cesium.TextureMinificationFilter.LINEAR,\n        magnificationFilter: Cesium.TextureMagnificationFilter.LINEAR\n      })\n    }\n\n    this.textures = {\n      segmentsColor: Util.createTexture(colorTextureOptions),\n      segmentsDepth: Util.createTexture(depthTextureOptions),\n\n      currentTrailsColor: Util.createTexture(colorTextureOptions),\n      currentTrailsDepth: Util.createTexture(depthTextureOptions),\n\n      nextTrailsColor: Util.createTexture(colorTextureOptions),\n      nextTrailsDepth: Util.createTexture(depthTextureOptions),\n\n      colorTable: Util.createTexture(\n        colorTableTextureOptions,\n        data.colorTable.array\n      )\n    }\n  }\n\n  createRenderingFramebuffers (context) {\n    this.framebuffers = {\n      segments: Util.createFramebuffer(\n        context,\n        this.textures.segmentsColor,\n        this.textures.segmentsDepth\n      ),\n      currentTrails: Util.createFramebuffer(\n        context,\n        this.textures.currentTrailsColor,\n        this.textures.currentTrailsDepth\n      ),\n      nextTrails: Util.createFramebuffer(\n        context,\n        this.textures.nextTrailsColor,\n        this.textures.nextTrailsDepth\n      )\n    }\n  }\n\n  createSegmentsGeometry (particleSystemOptions) {\n    const repeatVertex = 4\n\n    let st = []\n    for (let s = 0; s < particleSystemOptions.particlesTextureSize; s++) {\n      for (let t = 0; t < particleSystemOptions.particlesTextureSize; t++) {\n        for (let i = 0; i < repeatVertex; i++) {\n          st.push(s / particleSystemOptions.particlesTextureSize)\n          st.push(t / particleSystemOptions.particlesTextureSize)\n        }\n      }\n    }\n    st = new Float32Array(st)\n\n    let normal = []\n    const pointToUse = [-1, 1]\n    const offsetSign = [-1, 1]\n    for (let i = 0; i < particleSystemOptions.maxParticles; i++) {\n      for (let j = 0; j < repeatVertex / 2; j++) {\n        for (let k = 0; k < repeatVertex / 2; k++) {\n          normal.push(pointToUse[j])\n          normal.push(offsetSign[k])\n          normal.push(0)\n        }\n      }\n    }\n    normal = new Float32Array(normal)\n\n    const indexSize = 6 * particleSystemOptions.maxParticles\n    const vertexIndexes = new Uint32Array(indexSize)\n    for (let i = 0, j = 0, vertex = 0; i < particleSystemOptions.maxParticles; i++) {\n      vertexIndexes[j++] = vertex + 0\n      vertexIndexes[j++] = vertex + 1\n      vertexIndexes[j++] = vertex + 2\n      vertexIndexes[j++] = vertex + 2\n      vertexIndexes[j++] = vertex + 1\n      vertexIndexes[j++] = vertex + 3\n      vertex += 4\n    }\n\n    const geometry = new Cesium.Geometry({\n      attributes: new Cesium.GeometryAttributes({\n        st: new Cesium.GeometryAttribute({\n          componentDatatype: Cesium.ComponentDatatype.FLOAT,\n          componentsPerAttribute: 2,\n          values: st\n        }),\n        normal: new Cesium.GeometryAttribute({\n          componentDatatype: Cesium.ComponentDatatype.FLOAT,\n          componentsPerAttribute: 3,\n          values: normal\n        })\n      }),\n      indices: vertexIndexes\n    })\n\n    return geometry\n  }\n\n  createRenderingPrimitives (\n    context,\n    particleSystemOptions,\n    viewerParameters,\n    particlesComputing\n  ) {\n    const that = this\n    this.primitives = {\n      segments: new CustomPrimitive({\n        commandType: 'Draw',\n        attributeLocations: {\n          st: 0,\n          normal: 1\n        },\n        geometry: this.createSegmentsGeometry(particleSystemOptions),\n        primitiveType: Cesium.PrimitiveType.TRIANGLES,\n        uniformMap: {\n          currentParticlesPosition: function () {\n            return particlesComputing.particlesTextures.currentParticlesPosition\n          },\n          postProcessingPosition: function () {\n            return particlesComputing.particlesTextures.postProcessingPosition\n          },\n          postProcessingSpeed: function () {\n            return particlesComputing.particlesTextures.postProcessingSpeed\n          },\n          colorTable: function () {\n            return that.textures.colorTable\n          },\n          aspect: function () {\n            return context.drawingBufferWidth / context.drawingBufferHeight\n          },\n          pixelSize: function () {\n            return viewerParameters.pixelSize\n          },\n          lineWidth: function () {\n            return particleSystemOptions.lineWidth\n          },\n          particleHeight: function () {\n            return particleSystemOptions.particleHeight\n          }\n        },\n        vertexShaderSource: new Cesium.ShaderSource({\n          sources: [segmentDrawVert]\n        }),\n        fragmentShaderSource: new Cesium.ShaderSource({\n          sources: [segmentDrawFrag]\n        }),\n        rawRenderState: Util.createRawRenderState({\n          // undefined value means let Cesium deal with it\n          viewport: undefined,\n          depthTest: {\n            enabled: true\n          },\n          depthMask: true\n        }),\n        framebuffer: this.framebuffers.segments,\n        autoClear: true\n      }),\n\n      trails: new CustomPrimitive({\n        commandType: 'Draw',\n        attributeLocations: {\n          position: 0,\n          st: 1\n        },\n        geometry: Util.getFullscreenQuad(),\n        primitiveType: Cesium.PrimitiveType.TRIANGLES,\n        uniformMap: {\n          segmentsColorTexture: function () {\n            return that.textures.segmentsColor\n          },\n          segmentsDepthTexture: function () {\n            return that.textures.segmentsDepth\n          },\n          currentTrailsColor: function () {\n            return that.framebuffers.currentTrails.getColorTexture(0)\n          },\n          trailsDepthTexture: function () {\n            return that.framebuffers.currentTrails.depthTexture\n          },\n          fadeOpacity: function () {\n            return particleSystemOptions.fadeOpacity\n          }\n        },\n        // prevent Cesium from writing depth because the depth here should be written manually\n        vertexShaderSource: new Cesium.ShaderSource({\n          defines: ['DISABLE_GL_POSITION_LOG_DEPTH'],\n          sources: [fullscreenVert]\n        }),\n        fragmentShaderSource: new Cesium.ShaderSource({\n          defines: ['DISABLE_LOG_DEPTH_FRAGMENT_WRITE'],\n          sources: [trailDrawFrag]\n        }),\n        rawRenderState: Util.createRawRenderState({\n          viewport: undefined,\n          depthTest: {\n            enabled: true,\n            func: Cesium.DepthFunction.ALWAYS // always pass depth test for full control of depth information\n          },\n          depthMask: true\n        }),\n        framebuffer: this.framebuffers.nextTrails,\n        autoClear: true,\n        preExecute: function () {\n          // swap framebuffers before binding\n          const temp = that.framebuffers.currentTrails\n          that.framebuffers.currentTrails = that.framebuffers.nextTrails\n          that.framebuffers.nextTrails = temp\n\n          // keep the framebuffers up to date\n          that.primitives.trails.commandToExecute.framebuffer =\n            that.framebuffers.nextTrails\n          that.primitives.trails.clearCommand.framebuffer =\n            that.framebuffers.nextTrails\n        }\n      }),\n\n      screen: new CustomPrimitive({\n        commandType: 'Draw',\n        attributeLocations: {\n          position: 0,\n          st: 1\n        },\n        geometry: Util.getFullscreenQuad(),\n        primitiveType: Cesium.PrimitiveType.TRIANGLES,\n        uniformMap: {\n          trailsColorTexture: function () {\n            return that.framebuffers.nextTrails.getColorTexture(0)\n          },\n          trailsDepthTexture: function () {\n            return that.framebuffers.nextTrails.depthTexture\n          }\n        },\n        // prevent Cesium from writing depth because the depth here should be written manually\n        vertexShaderSource: new Cesium.ShaderSource({\n          defines: ['DISABLE_GL_POSITION_LOG_DEPTH'],\n          sources: [fullscreenVert]\n        }),\n        fragmentShaderSource: new Cesium.ShaderSource({\n          defines: ['DISABLE_LOG_DEPTH_FRAGMENT_WRITE'],\n          sources: [screenDrawFrag]\n        }),\n        rawRenderState: Util.createRawRenderState({\n          viewport: undefined,\n          depthTest: {\n            enabled: false\n          },\n          depthMask: true,\n          blending: {\n            enabled: true\n          }\n        }),\n        framebuffer: undefined // undefined value means let Cesium deal with it\n      })\n    }\n  }\n}\nexport default ParticlesRendering\n"],"names":["ParticlesRendering","context","data","particleSystemOptions","viewerParameters","particlesComputing","createRenderingTextures","createRenderingFramebuffers","createRenderingPrimitives","colorTextureOptions","width","drawingBufferWidth","height","drawingBufferHeight","pixelFormat","Cesium","PixelFormat","RGBA","pixelDatatype","PixelDatatype","UNSIGNED_BYTE","depthTextureOptions","DEPTH_COMPONENT","UNSIGNED_INT","colorTableTextureOptions","colorTable","colorNum","RGB","FLOAT","sampler","Sampler","minificationFilter","TextureMinificationFilter","LINEAR","magnificationFilter","TextureMagnificationFilter","textures","segmentsColor","Util","createTexture","segmentsDepth","currentTrailsColor","currentTrailsDepth","nextTrailsColor","nextTrailsDepth","array","framebuffers","segments","createFramebuffer","currentTrails","nextTrails","repeatVertex","st","s","particlesTextureSize","t","i","push","Float32Array","normal","pointToUse","offsetSign","maxParticles","j","k","indexSize","vertexIndexes","Uint32Array","vertex","geometry","Geometry","attributes","GeometryAttributes","GeometryAttribute","componentDatatype","ComponentDatatype","componentsPerAttribute","values","indices","that","primitives","CustomPrimitive","commandType","attributeLocations","createSegmentsGeometry","primitiveType","PrimitiveType","TRIANGLES","uniformMap","currentParticlesPosition","particlesTextures","postProcessingPosition","postProcessingSpeed","aspect","pixelSize","lineWidth","particleHeight","vertexShaderSource","ShaderSource","sources","segmentDrawVert","fragmentShaderSource","segmentDrawFrag","rawRenderState","createRawRenderState","viewport","undefined","depthTest","enabled","depthMask","framebuffer","autoClear","trails","position","getFullscreenQuad","segmentsColorTexture","segmentsDepthTexture","getColorTexture","trailsDepthTexture","depthTexture","fadeOpacity","defines","fullscreenVert","trailDrawFrag","func","DepthFunction","ALWAYS","preExecute","temp","commandToExecute","clearCommand","screen","trailsColorTexture","screenDrawFrag","blending"],"mappings":"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"}