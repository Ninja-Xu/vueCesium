{"version":3,"file":"util.js","sources":["src/exts/wind/util.js"],"sourcesContent":["const Util = (function () {\n  let fullscreenQuad = null\n  const getFullscreenQuad = function () {\n    if (!Cesium.defined(fullscreenQuad)) {\n      fullscreenQuad = new Cesium.Geometry({\n        attributes: new Cesium.GeometryAttributes({\n          position: new Cesium.GeometryAttribute({\n            componentDatatype: Cesium.ComponentDatatype.FLOAT,\n            componentsPerAttribute: 3,\n            //  v3----v2\n            //  |     |\n            //  |     |\n            //  v0----v1\n            values: new Float32Array([\n              -1, -1, 0, // v0\n              1, -1, 0, // v1\n              1, 1, 0, // v2\n              -1, 1, 0 // v3\n            ])\n          }),\n          st: new Cesium.GeometryAttribute({\n            componentDatatype: Cesium.ComponentDatatype.FLOAT,\n            componentsPerAttribute: 2,\n            values: new Float32Array([\n              0, 0,\n              1, 0,\n              1, 1,\n              0, 1\n            ])\n          })\n        }),\n        indices: new Uint32Array([3, 2, 0, 0, 2, 1])\n      })\n    }\n    return fullscreenQuad\n  }\n\n  const createTexture = function (options, typedArray) {\n    if (Cesium.defined(typedArray)) {\n      // typed array needs to be passed as source option, this is required by Cesium.Texture\n      const source = {}\n      source.arrayBufferView = typedArray\n      options.source = source\n    }\n\n    const texture = new Cesium.Texture(options)\n    return texture\n  }\n\n  const createFramebuffer = function (context, colorTexture, depthTexture) {\n    const framebuffer = new Cesium.Framebuffer({\n      context: context,\n      colorTextures: [colorTexture],\n      depthTexture: depthTexture\n    })\n    return framebuffer\n  }\n\n  const createRawRenderState = function (options) {\n    const translucent = true\n    const closed = false\n    const existing = {\n      viewport: options.viewport,\n      depthTest: options.depthTest,\n      depthMask: options.depthMask,\n      blending: options.blending\n    }\n\n    const rawRenderState = Cesium.Appearance.getDefaultRenderState(translucent, closed, existing)\n    return rawRenderState\n  }\n\n  const viewRectangleToLonLatRange = function (viewRectangle) {\n    const range = {}\n\n    const postiveWest = Cesium.Math.mod(viewRectangle.west, Cesium.Math.TWO_PI)\n    const postiveEast = Cesium.Math.mod(viewRectangle.east, Cesium.Math.TWO_PI)\n    const width = viewRectangle.width\n\n    let longitudeMin\n    let longitudeMax\n    if (width > Cesium.Math.THREE_PI_OVER_TWO) {\n      longitudeMin = 0.0\n      longitudeMax = Cesium.Math.TWO_PI\n    } else {\n      if (postiveEast - postiveWest < width) {\n        longitudeMin = postiveWest\n        longitudeMax = postiveWest + width\n      } else {\n        longitudeMin = postiveWest\n        longitudeMax = postiveEast\n      }\n    }\n\n    range.lon = {\n      min: Cesium.Math.toDegrees(longitudeMin),\n      max: Cesium.Math.toDegrees(longitudeMax)\n    }\n\n    const south = viewRectangle.south\n    const north = viewRectangle.north\n    const height = viewRectangle.height\n\n    const extendHeight = height > Cesium.Math.PI / 12 ? height / 2 : 0\n    let extendedSouth = Cesium.Math.clampToLatitudeRange(south - extendHeight)\n    let extendedNorth = Cesium.Math.clampToLatitudeRange(north + extendHeight)\n\n    // extend the bound in high latitude area to make sure it can cover all the visible area\n    if (extendedSouth < -Cesium.Math.PI_OVER_THREE) {\n      extendedSouth = -Cesium.Math.PI_OVER_TWO\n    }\n    if (extendedNorth > Cesium.Math.PI_OVER_THREE) {\n      extendedNorth = Cesium.Math.PI_OVER_TWO\n    }\n\n    range.lat = {\n      min: Cesium.Math.toDegrees(extendedSouth),\n      max: Cesium.Math.toDegrees(extendedNorth)\n    }\n\n    return range\n  }\n\n  return {\n    getFullscreenQuad: getFullscreenQuad,\n    createTexture: createTexture,\n    createFramebuffer: createFramebuffer,\n    createRawRenderState: createRawRenderState,\n    viewRectangleToLonLatRange: viewRectangleToLonLatRange\n  }\n})()\n\nexport default Util\n"],"names":["Util","fullscreenQuad","getFullscreenQuad","Cesium","defined","Geometry","attributes","GeometryAttributes","position","GeometryAttribute","componentDatatype","ComponentDatatype","FLOAT","componentsPerAttribute","values","Float32Array","st","indices","Uint32Array","createTexture","options","typedArray","source","arrayBufferView","texture","Texture","createFramebuffer","context","colorTexture","depthTexture","framebuffer","Framebuffer","colorTextures","createRawRenderState","translucent","closed","existing","viewport","depthTest","depthMask","blending","rawRenderState","Appearance","getDefaultRenderState","viewRectangleToLonLatRange","viewRectangle","range","postiveWest","Math","mod","west","TWO_PI","postiveEast","east","width","longitudeMin","longitudeMax","THREE_PI_OVER_TWO","lon","min","toDegrees","max","south","north","height","extendHeight","PI","extendedSouth","clampToLatitudeRange","extendedNorth","PI_OVER_THREE","PI_OVER_TWO","lat"],"mappings":"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"}