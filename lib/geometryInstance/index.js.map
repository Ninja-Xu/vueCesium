{"version":3,"file":"index.js","sources":["src/components/geometryInstance/GeometryInstance.vue?rollup-plugin-vue=script.js","src/components/geometryInstance/GeometryInstance.vue","src/components/geometryInstance/index.js"],"sourcesContent":["\nimport cmp from '../../mixins/virtualCmp'\nimport { modelMatrix, id } from '../../mixins/mixinProps'\nimport mergeDescriptors from '../../utils/mergeDescriptors'\nexport default {\n  name: 'vc-instance-geometry',\n  mixins: [cmp, modelMatrix, id],\n  props: {\n    geometry: Object,\n    attributes: Object\n  },\n  methods: {\n    /**\n     * 重写 createCesiumObject 方法，因为 GeometryInstance 构造参数中有一个必要参数 geometry，需要单独处理一下。\n     */\n    async createCesiumObject () {\n      const { $props, transformProps } = this\n      const options = transformProps($props)\n      if (!options.geometry) {\n        options.geometry = new Cesium.Geometry({ attributes: new Cesium.GeometryAttributes() })\n      }\n      return new Cesium.GeometryInstance(options)\n    },\n    async mount () {\n      this.index = this.$parent.childCount\n      this.$parent.childCount += 1\n      const { geometryInstance, primitiveContainer } = this\n      primitiveContainer && primitiveContainer.setGeometryInstances(geometryInstance, this.index)\n      return true\n    },\n    async setGeometry (geometry) {\n      const listener = this.$listeners['update:geometry']\n      if (listener) { this.$emit('update:geometry', geometry) } else this.geometryInstance.geometry = geometry\n      return true\n    },\n    getServices () {\n      const vm = this\n      return mergeDescriptors(cmp.methods.getServices.call(this), {\n        get geometryInstance () {\n          return vm.geometryInstance\n        },\n        get geometryContainer () {\n          return vm\n        }\n      })\n    }\n  },\n  stubVNode: {\n    attrs () {\n      return {\n        class: this.$options.name\n      }\n    }\n  },\n  created () {\n    this.renderByParent = true\n    Object.defineProperties(this, {\n      geometryInstance: {\n        enumerable: true,\n        get: () => this.cesiumObject\n      },\n      primitiveContainer: {\n        enumerable: true,\n        get: () => this.$services && this.$services.primitiveContainer\n      }\n    })\n  }\n}\n","<script>\nimport cmp from '../../mixins/virtualCmp'\nimport { modelMatrix, id } from '../../mixins/mixinProps'\nimport mergeDescriptors from '../../utils/mergeDescriptors'\nexport default {\n  name: 'vc-instance-geometry',\n  mixins: [cmp, modelMatrix, id],\n  props: {\n    geometry: Object,\n    attributes: Object\n  },\n  methods: {\n    /**\n     * 重写 createCesiumObject 方法，因为 GeometryInstance 构造参数中有一个必要参数 geometry，需要单独处理一下。\n     */\n    async createCesiumObject () {\n      const { $props, transformProps } = this\n      const options = transformProps($props)\n      if (!options.geometry) {\n        options.geometry = new Cesium.Geometry({ attributes: new Cesium.GeometryAttributes() })\n      }\n      return new Cesium.GeometryInstance(options)\n    },\n    async mount () {\n      this.index = this.$parent.childCount\n      this.$parent.childCount += 1\n      const { geometryInstance, primitiveContainer } = this\n      primitiveContainer && primitiveContainer.setGeometryInstances(geometryInstance, this.index)\n      return true\n    },\n    async setGeometry (geometry) {\n      const listener = this.$listeners['update:geometry']\n      if (listener) { this.$emit('update:geometry', geometry) } else this.geometryInstance.geometry = geometry\n      return true\n    },\n    getServices () {\n      const vm = this\n      return mergeDescriptors(cmp.methods.getServices.call(this), {\n        get geometryInstance () {\n          return vm.geometryInstance\n        },\n        get geometryContainer () {\n          return vm\n        }\n      })\n    }\n  },\n  stubVNode: {\n    attrs () {\n      return {\n        class: this.$options.name\n      }\n    }\n  },\n  created () {\n    this.renderByParent = true\n    Object.defineProperties(this, {\n      geometryInstance: {\n        enumerable: true,\n        get: () => this.cesiumObject\n      },\n      primitiveContainer: {\n        enumerable: true,\n        get: () => this.$services && this.$services.primitiveContainer\n      }\n    })\n  }\n}\n</script>\n","\nimport GeometryInstance from './GeometryInstance.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  Vue.component(GeometryInstance.name, GeometryInstance)\n}\n\nexport default plugin\n\nexport {\n  GeometryInstance,\n  plugin as install\n}\n"],"names":["name","mixins","cmp","modelMatrix","id","props","geometry","Object","attributes","methods","createCesiumObject","$props","transformProps","options","Cesium","Geometry","GeometryAttributes","GeometryInstance","mount","index","$parent","childCount","geometryInstance","primitiveContainer","setGeometryInstances","setGeometry","listener","$listeners","$emit","getServices","vm","mergeDescriptors","call","geometryContainer","stubVNode","attrs","class","$options","created","renderByParent","defineProperties","enumerable","get","cesiumObject","$services","plugin","Vue","installed","component"],"mappings":"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"}