{"version":3,"file":"index.js","sources":["src/components/imageryLayer/tiledCache/TiledCacheImageryProvider.vue?rollup-plugin-vue=script.js","src/components/imageryLayer/tiledCache/TiledCacheImageryProvider.vue","src/components/imageryLayer/tiledCache/index.js"],"sourcesContent":["\nimport {\n  url,\n  format,\n  credit,\n  minimumLevel,\n  maximumLevel,\n  rectangle,\n  tilingScheme,\n  ellipsoid,\n  tileWidth,\n  tileHeight\n} from '../../../mixins/mixinProps'\nimport mixinImageryProvider from '../../../mixins/providers/mixinImageryProvider'\nexport default {\n  name: 'vc-provider-imagery-tiledcache',\n  mixins: [\n    url,\n    format,\n    credit,\n    minimumLevel,\n    maximumLevel,\n    rectangle,\n    tilingScheme,\n    ellipsoid,\n    tileWidth,\n    tileHeight,\n    mixinImageryProvider\n  ],\n  props: {\n    dir: {\n      type: String,\n      reqiured: true\n    },\n    scales: {\n      type: Array,\n      default: () => {\n        return [\n          1 / 295829355,\n          1 / 147914678,\n          1 / 73957339,\n          1 / 36978669,\n          1 / 18489335,\n          1 / 9244667,\n          1 / 4622334,\n          1 / 2311167,\n          1 / 1155583,\n          1 / 577792,\n          1 / 288896,\n          1 / 144448,\n          1 / 72224,\n          1 / 36112,\n          1 / 18056,\n          1 / 9026,\n          1 / 4514\n        ]\n      }\n    }\n  },\n  methods: {\n    async createCesiumObject () {\n      const { $props, transformProps, padWithZerosIfNecessary, scales } = this\n      const options = transformProps($props)\n      const {\n        Credit,\n        defined,\n        defaultValue,\n        DeveloperError,\n        Ellipsoid,\n        GeographicTilingScheme,\n        Rectangle,\n        Resource,\n        UrlTemplateImageryProvider\n      } = Cesium\n\n      const { url, dir, format } = options\n      if (!defined(url)) {\n        throw new DeveloperError('options.url is required.')\n      }\n      if (!defined(dir)) {\n        throw new DeveloperError('options.dir is required.')\n      }\n      const resource = Resource.createIfNeeded(url)\n      resource.url += `?dir=${dir}&scale={scale}&col={x}&row={y}&format=${format}`\n\n      const tilingScheme = defaultValue(\n        options.tilingScheme,\n        new GeographicTilingScheme({\n          ellipsoid: defaultValue(options.ellipsoid, Ellipsoid.WGS84),\n          numberOfLevelZeroTilesX: 2,\n          numberOfLevelZeroTilesY: 1\n        })\n      )\n      const tileWidth = defaultValue(options.tileWidth, 256)\n      const tileHeight = defaultValue(options.tileHeight, 256)\n      const maximumLevel = options.maximumLevel\n      const minimumLevel = defaultValue(options.minimumLevel, 0)\n      const rectangle = defaultValue(options.rectangle, tilingScheme.rectangle)\n      // Check the number of tiles at the minimum level.  If it's more than four,\n      // throw an exception, because starting at the higher minimum\n      // level will cause too many tiles to be downloaded and rendered.\n      const swTile = tilingScheme.positionToTileXY(Rectangle.southwest(rectangle), minimumLevel)\n      const neTile = tilingScheme.positionToTileXY(Rectangle.northeast(rectangle), minimumLevel)\n      const tileCount = (Math.abs(neTile.x - swTile.x) + 1) * (Math.abs(neTile.y - swTile.y) + 1)\n\n      if (tileCount > 4) {\n        throw new DeveloperError(\n          'The rectangle and minimumLevel indicate that there are ' +\n          tileCount +\n          ' tiles at the minimum level. Imagery providers with more than four tiles at the minimum level are not supported.'\n        )\n      }\n\n      let credit = defaultValue(options.credit, '')\n      if (typeof credit === 'string') {\n        credit = new Credit(credit)\n      }\n\n      return new UrlTemplateImageryProvider({\n        url: resource,\n        credit: credit,\n        tilingScheme: tilingScheme,\n        tileWidth: tileWidth,\n        tileHeight: tileHeight,\n        minimumLevel: minimumLevel,\n        maximumLevel: maximumLevel,\n        rectangle: rectangle,\n        customTags: {\n          scale: (imageryProvider, x, y, level) => {\n            const s = 1 / scales[level]\n            return padWithZerosIfNecessary(imageryProvider, '{scale}', s)\n          }\n        }\n      })\n    },\n    padWithZerosIfNecessary (imageryProvider, key, value) {\n      if (imageryProvider && imageryProvider.urlSchemeZeroPadding && Object.prototype.hasOwnProperty.call(imageryProvider.urlSchemeZeroPadding, key)) {\n        const paddingTemplate = imageryProvider.urlSchemeZeroPadding[key]\n        if (typeof paddingTemplate === 'string') {\n          const paddingTemplateWidth = paddingTemplate.length\n          if (paddingTemplateWidth > 1) {\n            value =\n              value.length >= paddingTemplateWidth\n                ? value\n                : new Array(paddingTemplateWidth - value.toString().length + 1).join('0') + value\n          }\n        }\n      }\n      return value\n    }\n  }\n}\n","<script>\nimport {\n  url,\n  format,\n  credit,\n  minimumLevel,\n  maximumLevel,\n  rectangle,\n  tilingScheme,\n  ellipsoid,\n  tileWidth,\n  tileHeight\n} from '../../../mixins/mixinProps'\nimport mixinImageryProvider from '../../../mixins/providers/mixinImageryProvider'\nexport default {\n  name: 'vc-provider-imagery-tiledcache',\n  mixins: [\n    url,\n    format,\n    credit,\n    minimumLevel,\n    maximumLevel,\n    rectangle,\n    tilingScheme,\n    ellipsoid,\n    tileWidth,\n    tileHeight,\n    mixinImageryProvider\n  ],\n  props: {\n    dir: {\n      type: String,\n      reqiured: true\n    },\n    scales: {\n      type: Array,\n      default: () => {\n        return [\n          1 / 295829355,\n          1 / 147914678,\n          1 / 73957339,\n          1 / 36978669,\n          1 / 18489335,\n          1 / 9244667,\n          1 / 4622334,\n          1 / 2311167,\n          1 / 1155583,\n          1 / 577792,\n          1 / 288896,\n          1 / 144448,\n          1 / 72224,\n          1 / 36112,\n          1 / 18056,\n          1 / 9026,\n          1 / 4514\n        ]\n      }\n    }\n  },\n  methods: {\n    async createCesiumObject () {\n      const { $props, transformProps, padWithZerosIfNecessary, scales } = this\n      const options = transformProps($props)\n      const {\n        Credit,\n        defined,\n        defaultValue,\n        DeveloperError,\n        Ellipsoid,\n        GeographicTilingScheme,\n        Rectangle,\n        Resource,\n        UrlTemplateImageryProvider\n      } = Cesium\n\n      const { url, dir, format } = options\n      if (!defined(url)) {\n        throw new DeveloperError('options.url is required.')\n      }\n      if (!defined(dir)) {\n        throw new DeveloperError('options.dir is required.')\n      }\n      const resource = Resource.createIfNeeded(url)\n      resource.url += `?dir=${dir}&scale={scale}&col={x}&row={y}&format=${format}`\n\n      const tilingScheme = defaultValue(\n        options.tilingScheme,\n        new GeographicTilingScheme({\n          ellipsoid: defaultValue(options.ellipsoid, Ellipsoid.WGS84),\n          numberOfLevelZeroTilesX: 2,\n          numberOfLevelZeroTilesY: 1\n        })\n      )\n      const tileWidth = defaultValue(options.tileWidth, 256)\n      const tileHeight = defaultValue(options.tileHeight, 256)\n      const maximumLevel = options.maximumLevel\n      const minimumLevel = defaultValue(options.minimumLevel, 0)\n      const rectangle = defaultValue(options.rectangle, tilingScheme.rectangle)\n      // Check the number of tiles at the minimum level.  If it's more than four,\n      // throw an exception, because starting at the higher minimum\n      // level will cause too many tiles to be downloaded and rendered.\n      const swTile = tilingScheme.positionToTileXY(Rectangle.southwest(rectangle), minimumLevel)\n      const neTile = tilingScheme.positionToTileXY(Rectangle.northeast(rectangle), minimumLevel)\n      const tileCount = (Math.abs(neTile.x - swTile.x) + 1) * (Math.abs(neTile.y - swTile.y) + 1)\n\n      if (tileCount > 4) {\n        throw new DeveloperError(\n          'The rectangle and minimumLevel indicate that there are ' +\n          tileCount +\n          ' tiles at the minimum level. Imagery providers with more than four tiles at the minimum level are not supported.'\n        )\n      }\n\n      let credit = defaultValue(options.credit, '')\n      if (typeof credit === 'string') {\n        credit = new Credit(credit)\n      }\n\n      return new UrlTemplateImageryProvider({\n        url: resource,\n        credit: credit,\n        tilingScheme: tilingScheme,\n        tileWidth: tileWidth,\n        tileHeight: tileHeight,\n        minimumLevel: minimumLevel,\n        maximumLevel: maximumLevel,\n        rectangle: rectangle,\n        customTags: {\n          scale: (imageryProvider, x, y, level) => {\n            const s = 1 / scales[level]\n            return padWithZerosIfNecessary(imageryProvider, '{scale}', s)\n          }\n        }\n      })\n    },\n    padWithZerosIfNecessary (imageryProvider, key, value) {\n      if (imageryProvider && imageryProvider.urlSchemeZeroPadding && Object.prototype.hasOwnProperty.call(imageryProvider.urlSchemeZeroPadding, key)) {\n        const paddingTemplate = imageryProvider.urlSchemeZeroPadding[key]\n        if (typeof paddingTemplate === 'string') {\n          const paddingTemplateWidth = paddingTemplate.length\n          if (paddingTemplateWidth > 1) {\n            value =\n              value.length >= paddingTemplateWidth\n                ? value\n                : new Array(paddingTemplateWidth - value.toString().length + 1).join('0') + value\n          }\n        }\n      }\n      return value\n    }\n  }\n}\n</script>\n","import TiledCacheImageryProvider from './TiledCacheImageryProvider.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  Vue.component(TiledCacheImageryProvider.name, TiledCacheImageryProvider)\n}\n\nexport default plugin\n\nexport {\n  TiledCacheImageryProvider,\n  plugin as install\n}\n"],"names":["name","mixins","url","format","credit","minimumLevel","maximumLevel","rectangle","tilingScheme","ellipsoid","tileWidth","tileHeight","mixinImageryProvider","props","dir","type","String","reqiured","scales","Array","default","methods","createCesiumObject","$props","transformProps","padWithZerosIfNecessary","options","Cesium","Credit","defined","defaultValue","DeveloperError","Ellipsoid","GeographicTilingScheme","Rectangle","Resource","UrlTemplateImageryProvider","resource","createIfNeeded","WGS84","numberOfLevelZeroTilesX","numberOfLevelZeroTilesY","swTile","positionToTileXY","southwest","neTile","northeast","tileCount","Math","abs","x","y","customTags","scale","imageryProvider","level","s","key","value","urlSchemeZeroPadding","Object","prototype","hasOwnProperty","call","paddingTemplate","paddingTemplateWidth","length","toString","join","plugin","Vue","installed","component","TiledCacheImageryProvider"],"mappings":"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"}