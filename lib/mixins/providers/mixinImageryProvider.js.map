{"version":3,"file":"mixinImageryProvider.js","sources":["src/mixins/providers/mixinImageryProvider.js"],"sourcesContent":["import bindEvents from '../../utils/bindEvent'\nimport { Events } from '../../utils/events'\nimport cmp from '../virtualCmp'\nimport * as coordtransform from '../../utils/coordtransform'\n\nconst methods = {\n  async mount () {\n    const { imageryProvider, providerContainer, projectionTransforms } = this\n    imageryProvider.readyPromise.then(() => {\n      const listener = this.$listeners.readyPromise\n      listener && this.$emit('readyPromise', imageryProvider)\n    }).otherwise(error => {\n      throw new Cesium.DeveloperError(error)\n    })\n    if (projectionTransforms && projectionTransforms.from !== projectionTransforms.to) {\n      const ignoreTransforms = this.$options.name === 'vc-provider-imagery-baidumap' ||\n        (this.$options.name === 'vc-provider-imagery-tianditu' && imageryProvider._epsgCode === '4490')\n      if (!ignoreTransforms) {\n        const { WebMercatorTilingScheme, Cartographic, Math: CesiumMath } = Cesium\n        const tilingScheme = new WebMercatorTilingScheme()\n        const projection = tilingScheme.projection\n        const nativeProject = projection.project\n        const nativeUnProject = projection.unproject\n        let projectMethods\n        let unprojectMethods\n        if (projectionTransforms.to.toUpperCase() === 'WGS84') {\n          projectMethods = 'wgs84togcj02'\n          unprojectMethods = 'gcj02towgs84'\n        } else if (projectionTransforms.to.toUpperCase() === 'GCJ02') {\n          projectMethods = 'gcj02towgs84'\n          unprojectMethods = 'wgs84togcj02'\n        }\n\n        if (projectMethods && unprojectMethods) {\n          projection.project = function (cartographic, result) {\n            result = result || {}\n            result = coordtransform[projectMethods](CesiumMath.toDegrees(cartographic.longitude), CesiumMath.toDegrees(cartographic.latitude))\n            return nativeProject.call(this, new Cartographic(CesiumMath.toRadians(result[0]), CesiumMath.toRadians(result[1])))\n          }\n          projection.unproject = function (cartesian2, result) {\n            result = result || {}\n            const cartographic = nativeUnProject.call(this, cartesian2)\n            result = coordtransform[unprojectMethods](CesiumMath.toDegrees(cartographic.longitude), CesiumMath.toDegrees(cartographic.latitude))\n            return new Cartographic(CesiumMath.toRadians(result[0]), CesiumMath.toRadians(result[1]))\n          }\n\n          imageryProvider._tilingScheme = tilingScheme\n        }\n      }\n    }\n\n    bindEvents.call(this, imageryProvider, Events['imagery-layer-events'], true)\n    return providerContainer && providerContainer.setProvider(imageryProvider)\n  },\n  async unmount () {\n    const { imageryProvider, providerContainer } = this\n    bindEvents.call(this, imageryProvider, Events['imagery-layer-events'], false)\n    return providerContainer && providerContainer.setProvider(undefined)\n  }\n}\nexport default {\n  mixins: [cmp],\n  methods,\n  stubVNode: {\n    empty () {\n      return this.$options.name\n    }\n  },\n  props: {\n    projectionTransforms: {\n      type: Boolean | Object,\n      default: false\n    }\n  },\n  created () {\n    this.renderByParent = true\n    Object.defineProperties(this, {\n      imageryProvider: {\n        enumerable: true,\n        get: () => this.cesiumObject\n      },\n      providerContainer: {\n        enumerable: true,\n        get: () => this.$services && this.$services.providerContainer\n      }\n    })\n  }\n}\n"],"names":["methods","mount","imageryProvider","providerContainer","projectionTransforms","readyPromise","then","listener","$listeners","$emit","otherwise","error","Cesium","DeveloperError","from","to","ignoreTransforms","$options","name","_epsgCode","WebMercatorTilingScheme","Cartographic","CesiumMath","Math","tilingScheme","projection","nativeProject","project","nativeUnProject","unproject","toUpperCase","projectMethods","unprojectMethods","cartographic","result","coordtransform","toDegrees","longitude","latitude","call","toRadians","cartesian2","_tilingScheme","bindEvents","Events","setProvider","unmount","undefined","mixins","cmp","stubVNode","empty","props","type","Boolean","Object","default","created","renderByParent","defineProperties","enumerable","get","cesiumObject","$services"],"mappings":"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"}