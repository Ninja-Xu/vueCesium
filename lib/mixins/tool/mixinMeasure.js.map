{"version":3,"file":"mixinMeasure.js","sources":["src/mixins/tool/mixinMeasure.js"],"sourcesContent":["import cmp from '../virtualCmp'\nimport VisibilityState from './VisibilityState'\nconst props = {\n  mode: {\n    type: Number,\n    default: 1\n  },\n  font: {\n    type: String,\n    default: '100 20px SimSun'\n  },\n  fillColor: {\n    type: String | Object | Array,\n    default: 'WHITE'\n  },\n  labelStyle: {\n    type: Number,\n    default: 2\n  },\n  showBackground: {\n    type: Boolean,\n    default: true\n  },\n  backgroundColor: {\n    type: String | Object | Array,\n    default: 'rgba(38, 38, 38, 0.85)'\n  },\n  outlineWidth: {\n    type: Number,\n    default: 1\n  },\n  outlineColor: {\n    type: String | Object | Array,\n    default: 'BLUE'\n  },\n  pixelOffset: {\n    type: Object,\n    default: () => {\n      return { x: 15, y: -20 }\n    }\n  },\n  pointColor: {\n    type: String | Object | Array,\n    default: 'rgb(255,229,0)'\n  },\n  pointPixelSize: {\n    type: Number,\n    default: 8\n  },\n  polylineMaterial: {\n    type: Object,\n    default: () => {\n      return {\n        fabric: {\n          type: 'Color',\n          uniforms: {\n            color: '#51ff00'\n          }\n        }\n      }\n    }\n  },\n  polylineWidth: {\n    type: Number,\n    default: 2\n  },\n  depthTest: {\n    type: Boolean,\n    default: false\n  }\n}\nconst watch = {\n  async measuring (val) {\n    let nextTick = false\n    const { polylines, startNew, type, getVcParent } = this\n    const polyline = polylines[polylines.length - 1]\n    if (!val && polyline && !polyline.positions.length) {\n      this.polylines.pop()\n    } else if (val) {\n      const measureCmpNames = []\n      switch (type) {\n        case 'distanceMeasuring':\n          measureCmpNames.push('vc-measure-height')\n          measureCmpNames.push('vc-measure-area')\n          break\n        case 'areaMeasuring':\n          measureCmpNames.push('vc-measure-distance')\n          measureCmpNames.push('vc-measure-height')\n          break\n        case 'heightMeasuring':\n          measureCmpNames.push('vc-measure-distance')\n          measureCmpNames.push('vc-measure-area')\n          break\n      }\n\n      const drawCmpNames = ['vc-handler-draw-polyline', 'vc-handler-draw-point', 'vc-handler-draw-polygon']\n      for (const $node of getVcParent(this).$slots.default || []) {\n        if ($node.componentOptions && measureCmpNames.indexOf($node.componentOptions.tag) !== -1) {\n          $node.child.measuring = false\n          nextTick = true\n        }\n        if ($node.componentOptions && drawCmpNames.indexOf($node.componentOptions.tag) !== -1) {\n          $node.child.drawing = false\n          nextTick = true\n        }\n      }\n      startNew()\n    }\n    nextTick && (await this.$nextTick())\n    this.viewer.canvas.setAttribute('style', val ? 'cursor: crosshair' : 'cursor: auto')\n    const listener = this.$listeners.activeEvt\n    listener && this.$emit('activeEvt', { type: type, isActive: val })\n  }\n}\nconst computed = {\n  points () {\n    const points = []\n    this.polylines.forEach((polyline, index) => {\n      polyline.positions.forEach((position, subIndex) => {\n        const point = {\n          color: this.pointColor,\n          pixelSize: this.pointPixelSize,\n          position: position,\n          polylineIndex: index,\n          positionIndex: subIndex,\n          disableDepthTestDistance: Cesium.SuperMapVersion ? 0 : Number.POSITIVE_INFINITY\n        }\n        points.push(point)\n      })\n    })\n    return points\n  }\n}\n\nconst methods = {\n  async createCesiumObject () {\n    const { viewer } = this\n    viewer.scene.frameState.morphTime = 0\n    const handler = new Cesium.ScreenSpaceEventHandler(viewer.canvas)\n    handler.setInputAction(this.LEFT_CLICK, Cesium.ScreenSpaceEventType.LEFT_CLICK)\n    handler.setInputAction(this.MOUSE_MOVE, Cesium.ScreenSpaceEventType.MOUSE_MOVE)\n    handler.setInputAction(this.RIGHT_CLICK, Cesium.ScreenSpaceEventType.RIGHT_CLICK)\n    this.handler = handler\n    this.enterMoveAction = false\n    this.lastCartesianRemoved = false\n    this.visibilityState = new VisibilityState()\n    return this.polylines\n  },\n  async mount () {\n    return true\n  },\n  async unmount () {\n    return true\n  },\n  LEFT_CLICK (movement) {\n    if (!this.measuring) {\n      return\n    }\n    const { Cesium, viewer, polylines, type, onMeasureEvt } = this\n    const cartesian = this.getWorldPosition(viewer.scene, movement.position)\n    if (!Cesium.defined(cartesian)) {\n      return\n    }\n\n    const nIndex = polylines.length - 1\n    const polyline = polylines[nIndex]\n\n    if (type === 'distanceMeasuring' || type === 'areaMeasuring') {\n      // 鼠标移动事件添加的移动点需要移除\n      if (this.enterMoveAction) {\n        polyline.positions.pop()\n        polyline.distances && polyline.distances.pop()\n        this.lastCartesianRemoved = true\n      }\n    }\n\n    polyline.positions.push(cartesian)\n    const length = polyline.positions.length\n    if (length > 1) {\n      // 重复点不计算\n      if (Cesium.Cartesian3.distance(polyline.positions[length - 1], polyline.positions[length - 2]) < 1e-3) {\n        polyline.positions.pop()\n        return\n      }\n    }\n\n    switch (type) {\n      case 'distanceMeasuring':\n        polyline.distance = this.getDistance(polyline.positions)\n        polyline.distances.push(polyline.distance)\n        onMeasureEvt(polyline, nIndex)\n        break\n      case 'areaMeasuring':\n        polyline.area = this.getSurfaceArea(polyline.positions)\n        polyline.projectedArea = this.getProjectedArea(polyline.positions)\n        polyline.distance = this.getDistance(polyline.positions)\n        polyline.distances.push(polyline.distance)\n\n        if (polyline.positions.length > 2 && !this.enterMoveAction) {\n          if (this.moveLastDistance) {\n            polyline.distances.pop()\n          }\n\n          const clonePoistions = Cesium.clone(polyline.positions, true)\n          clonePoistions.push(polyline.positions[0])\n          const distance = this.getDistance(clonePoistions)\n          polyline.distances.push(distance)\n          polyline.distance = distance\n          this.moveLastDistance = true\n        }\n\n        onMeasureEvt(polyline, nIndex)\n        break\n      case 'heightMeasuring':\n        polyline.positions.pop()\n        if (polyline.positions.length === 0) {\n          polyline.positions.push(cartesian)\n          this.startPoint = cartesian\n        }\n        onMeasureEvt(polyline, this.labels)\n        break\n    }\n  },\n  async MOUSE_MOVE (movement) {\n    if (!this.measuring) {\n      return\n    }\n    const { viewer, polylines, onMeasureEvt, type } = this\n    if (!polylines.length) {\n      return\n    }\n    let nIndex = polylines.length - 1\n    const polyline = polylines[nIndex]\n    if (!polyline.positions.length) {\n      return\n    }\n    const cartesian = this.getWorldPosition(viewer.scene, movement.endPosition)\n    if (!Cesium.defined(cartesian)) {\n      return\n    }\n    this.enterMoveAction = true\n    const listener = this.$listeners.movingEvt\n    listener && this.$emit('movingEvt', movement.endPosition, type)\n    if (type === 'distanceMeasuring' || type === 'areaMeasuring') {\n      if (polyline.positions.length >= 2) {\n        // 如果鼠标左键点击事件移除了 不需要再移除\n        if (!this.lastCartesianRemoved) {\n          polyline.positions.pop()\n          polyline.distances && polyline.distances.pop()\n        }\n\n        if (type === 'areaMeasuring') {\n          polyline.distances && polyline.distances.pop()\n        }\n      }\n      polyline.positions.push(cartesian)\n      this.lastCartesianRemoved = false\n      if (type === 'distanceMeasuring') {\n        const distance = this.getDistance(polyline.positions)\n        polyline.distances.push(distance)\n        polyline.distance = distance\n        nIndex =\n          polylines.reduce((pre, cur) => {\n            return pre + cur.positions.length - 1\n          }, 0) - 1\n      } else {\n        polyline.area = this.getSurfaceArea(polyline.positions)\n        polyline.projectedArea = this.getProjectedArea(polyline.positions)\n\n        let distance = this.getDistance(polyline.positions)\n        polyline.distances.push(distance)\n        polyline.distance = distance\n\n        if (polyline.positions.length >= 2) {\n          const clonePoistions = Cesium.clone(polyline.positions, true)\n          clonePoistions.push(polyline.positions[0])\n          distance = this.getDistance(clonePoistions)\n          polyline.distances.push(distance)\n          polyline.distance = distance\n        }\n      }\n      await this.$nextTick()\n      onMeasureEvt(polyline, nIndex)\n    } else {\n      const { labels } = this\n      this.getHeight(cartesian, polyline)\n      await this.$nextTick()\n      onMeasureEvt(polyline, labels)\n    }\n  },\n  async RIGHT_CLICK (movement) {\n    if (!this.measuring) {\n      return\n    }\n    const { viewer, polylines, mode, startNew, onMeasureEvt, type, removeLastPosition } = this\n    if (!polylines.length) {\n      return\n    }\n    let nIndex = polylines.length - 1\n    const polyline = polylines[nIndex]\n    if (polyline.positions.length === 0) {\n      return\n    }\n    const cartesian = this.getWorldPosition(viewer.scene, movement.position)\n    if (!Cesium.defined(cartesian)) {\n      return\n    }\n    if (type === 'distanceMeasuring') {\n      if (removeLastPosition) {\n        polyline.positions.pop()\n        polyline.distances.pop()\n      }\n      const { getDistance } = this\n      polyline.distance = getDistance(polyline.positions)\n      if (polyline.positions.length === 1) {\n        polyline.positions = []\n      }\n      nIndex =\n        polylines.reduce((pre, cur) => {\n          return pre + cur.positions.length - 1\n        }, 0) - 1\n    } else if (type === 'areaMeasuring') {\n      if (removeLastPosition) {\n        polyline.positions.pop()\n        polyline.distances.pop()\n      }\n\n      const { getSurfaceArea, getProjectedArea } = this\n      polyline.area = getSurfaceArea(polyline.positions)\n      polyline.projectedArea = getProjectedArea(polyline.positions)\n      polyline.distance = this.getDistance(polyline.positions)\n\n      if (polyline.positions.length >= 2 && this.enterMoveAction) {\n        polyline.distances.pop()\n\n        const clonePoistions = Cesium.clone(polyline.positions, true)\n        clonePoistions.push(polyline.positions[0])\n        const distance = this.getDistance(clonePoistions)\n        polyline.distances.push(distance)\n        polyline.distance = distance\n      }\n      this.moveLastDistance = false\n\n      if (polyline.positions.length <= 2) {\n        polyline.positions = []\n      }\n    } else {\n      this.getHeight(cartesian, polyline)\n    }\n\n    if (mode === 0) {\n      startNew()\n    } else {\n      this.measuring = false\n    }\n\n    await this.$nextTick()\n\n    if (type === 'distanceMeasuring' || type === 'areaMeasuring') {\n      onMeasureEvt(polyline, nIndex, true)\n    } else {\n      const { labels } = this\n      onMeasureEvt(polyline, labels, true)\n    }\n  },\n  startNew () {\n    const { polylines, type } = this\n    if (!Cesium.defined(polylines)) {\n      return\n    }\n    const polyline = {\n      positions: []\n    }\n    if (type === 'distanceMeasuring') {\n      Object.assign(polyline, {\n        distances: [],\n        distance: 0\n      })\n    } else if (type === 'areaMeasuring') {\n      Object.assign(polyline, {\n        area: 0,\n        projectedArea: 0,\n        distances: [],\n        distance: 0\n      })\n    } else {\n      Object.assign(polyline, {\n        distanceH: 0,\n        height: 0,\n        distanceS: 0\n      })\n    }\n    polylines.push(polyline)\n  },\n  /**\n   * 根据传入坐标数组计算距离。\n   * @param {Array.Cartesian3} positions 传入的坐标数组\n   * @returns {Number} 返回长度数值。\n   */\n  getDistance (positions) {\n    const { Cartesian3 } = Cesium\n    const { clampToGround, getGeodesicDistance } = this\n    let distance = 0\n    for (let i = 0; i < positions.length - 1; i++) {\n      let s = 0\n      if (clampToGround) {\n        // Cartesian.distance gives the straight line distance between the two points, ignoring curvature. This is not what we want.\n        // Cartesian3.distance 计算的是两点之间的直线距离，忽略了地球曲率，贴地时不太合理。\n        // 2.0.3 版本增加测地线距离（GeodesicDistance）。\n        s = getGeodesicDistance(positions[i], positions[i + 1])\n      } else {\n        s = Cartesian3.distance(positions[i], positions[i + 1])\n      }\n      distance = distance + s\n    }\n    return distance\n  },\n  /**\n   * 返回两点之间的测地距离。\n   * @param {Cartesian3} pointOne 第一个坐标点\n   * @param {Cartesian3} pointTwo 第二个坐标点\n   * @returns {Number} 返回两点之间的测地距离。\n   */\n  getGeodesicDistance (pointOne, pointTwo) {\n    const { EllipsoidGeodesic } = Cesium\n    const { viewer } = this\n    const pickedPointCartographic = viewer.scene.globe.ellipsoid.cartesianToCartographic(pointOne)\n    const lastPointCartographic = viewer.scene.globe.ellipsoid.cartesianToCartographic(pointTwo)\n    const geodesic = new EllipsoidGeodesic(pickedPointCartographic, lastPointCartographic)\n    return geodesic.surfaceDistance\n  },\n  getHeight (endPoint, polyline) {\n    const { labels } = this\n    // let endPoint = cartesian\n    const normalStart = {}\n    Cesium.Cartesian3.normalize(this.startPoint, normalStart)\n    const planeStart = new Cesium.Plane(normalStart, -Cesium.Cartesian3.distance(this.startPoint, new Cesium.Cartesian3(0, 0, 0)))\n    const hypPoint = {}\n    polyline.height = Cesium.Plane.getPointDistance(planeStart, endPoint)\n    const labelPositonHeight = {}\n    const labelPositonH = {}\n    const labelPositonS = {}\n    if (polyline.height <= 0) {\n      Cesium.Plane.projectPointOntoPlane(planeStart, endPoint, hypPoint)\n      Cesium.Cartesian3.midpoint(endPoint, hypPoint, labelPositonHeight)\n      Cesium.Cartesian3.midpoint(this.startPoint, hypPoint, labelPositonH)\n      polyline.distanceH = Cesium.Cartesian3.distance(this.startPoint, hypPoint)\n    } else {\n      const normalEnd = {}\n      Cesium.Cartesian3.normalize(endPoint, normalEnd)\n      const planeEnd = new Cesium.Plane(normalStart, -Cesium.Cartesian3.distance(endPoint, new Cesium.Cartesian3(0, 0, 0)))\n      Cesium.Plane.projectPointOntoPlane(planeEnd, this.startPoint, hypPoint)\n      Cesium.Cartesian3.midpoint(this.startPoint, hypPoint, labelPositonHeight)\n      Cesium.Cartesian3.midpoint(endPoint, hypPoint, labelPositonH)\n      polyline.distanceH = Cesium.Cartesian3.distance(endPoint, hypPoint)\n    }\n    polyline.distanceS = Cesium.Cartesian3.distance(this.startPoint, endPoint)\n    Cesium.Cartesian3.midpoint(this.startPoint, endPoint, labelPositonS)\n    polyline.height = Math.abs(polyline.height)\n    if (polyline.positions.length !== 1) {\n      polyline.positions.pop()\n      polyline.positions.pop()\n      labels.pop()\n      labels.pop()\n      labels.pop()\n    }\n    polyline.positions.push(endPoint)\n    polyline.positions.push(hypPoint)\n    const labelTextHeight = polyline.height > 1000 ? (polyline.height / 1000).toFixed(2) + 'km' : polyline.height.toFixed(2) + 'm'\n    labels.push({\n      text: this.$vc.lang.measure.verticalHeight + ': ' + labelTextHeight,\n      position: labelPositonHeight\n    })\n    const labelTextH =\n      polyline.distanceH > 1000 ? (polyline.distanceH / 1000).toFixed(2) + 'km' : polyline.distanceH.toFixed(2) + 'm'\n    labels.push({\n      text: this.$vc.lang.measure.horizontalDistance + ': ' + labelTextH,\n      position: labelPositonH\n    })\n    const labelTextS =\n      polyline.distanceS > 1000 ? (polyline.distanceS / 1000).toFixed(2) + 'km' : polyline.distanceS.toFixed(2) + 'm'\n    labels.push({\n      text: this.$vc.lang.measure.spaceDistance + ': ' + labelTextS,\n      position: labelPositonS\n    })\n  },\n  onMeasureEvt (polyline, index, flag = false) {\n    if (!this.depthTest) {\n      const rs = Cesium.RenderState.fromCache({\n        depthMask: true,\n        depthTest: {\n          enabled: false\n        }\n      })\n      if (Cesium.SuperMapVersion) {\n        this.$refs.polylineCollection && (this.$refs.polylineCollection.cesiumObject._opaqueRS = rs)\n        this.$refs.pointCollection && (this.$refs.pointCollection.cesiumObject._rsOpaque = rs)\n        this.$refs.labelCollection.cesiumObject._billboardCollection._rsTranslucent = rs\n        this.$refs.labelCollection.cesiumObject._backgroundBillboardCollection._rsTranslucent = rs\n      } else {\n        this.$refs.polylineCollection && (this.$refs.polylineCollection.cesiumObject._opaqueRS.depthTest.enabled = false)\n      }\n\n      const listener = this.$listeners.measureEvt\n      const { type } = this\n      if (type === 'distanceMeasuring' || type === 'areaMeasuring') {\n        listener &&\n          this.$emit('measureEvt', {\n            polyline: polyline,\n            label: this.$refs.labelCollection.cesiumObject.get(index),\n            type: type,\n            finished: flag\n          })\n      } else {\n        const labels = index\n        const labelsResult = {\n          labelHeight: this.$refs.labelCollection.cesiumObject.get(labels.length - 3),\n          labelH: this.$refs.labelCollection.cesiumObject.get(labels.length - 2),\n          labelS: this.$refs.labelCollection.cesiumObject.get(labels.length - 1)\n        }\n        listener && this.$emit('measureEvt', { polyline: polyline, label: labelsResult, type: 'heightMeasuring', finished: flag })\n      }\n    }\n  },\n  getWorldPosition (scene, windowPosition, result) {\n    const { Cesium3DTileFeature, Cesium3DTileset, Cartesian3, defined, Model, Ray } = Cesium\n    if (Cesium.SuperMapVersion) {\n      // 超图版本下 PointPrimitive 在隐藏了的状态下仍然能被拾取到\n      // 因此直接返回拾取坐标\n      return scene.pickPosition(windowPosition)\n    }\n    let position\n    const cartesianScratch = {}\n    const rayScratch = new Ray()\n\n    if (scene.pickPositionSupported) {\n      this.visibilityState.hide(scene)\n      const pickObj = scene.pick(windowPosition, 1, 1)\n      this.visibilityState.restore(scene)\n      if (defined(pickObj)) {\n        if (\n          pickObj instanceof Cesium3DTileFeature ||\n          pickObj.primitive instanceof Cesium3DTileset ||\n          pickObj.primitive instanceof Model ||\n          pickObj.primitive instanceof Cesium.S3MTilesLayer\n        ) {\n          position = scene.pickPosition(windowPosition, cartesianScratch)\n          if (Cesium.defined(position)) {\n            return Cartesian3.clone(position, result)\n          }\n        }\n      }\n    }\n    if (defined(scene.globe)) {\n      const ray = scene.camera.getPickRay(windowPosition, rayScratch)\n      position = scene.globe.pick(ray, scene, cartesianScratch)\n      return defined(position) ? Cartesian3.clone(position, result) : undefined\n    }\n\n    return undefined\n  }\n}\n\nexport default {\n  mixins: [cmp],\n  props,\n  watch,\n  computed,\n  methods,\n  created () {\n    Object.defineProperties(this, {\n      polyline: {\n        enumerable: true,\n        get: () => this.polyline\n      }\n    })\n  },\n  destroyed () {\n    const { handler } = this\n    if (handler) {\n      handler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_CLICK)\n      handler.removeInputAction(Cesium.ScreenSpaceEventType.MOUSE_MOVE)\n      handler.removeInputAction(Cesium.ScreenSpaceEventType.RIGHT_CLICK)\n      handler.destroy()\n    }\n  }\n}\n"],"names":["props","mode","type","Number","default","font","String","fillColor","Object","Array","labelStyle","showBackground","Boolean","backgroundColor","outlineWidth","outlineColor","pixelOffset","x","y","pointColor","pointPixelSize","polylineMaterial","fabric","uniforms","color","polylineWidth","depthTest","watch","measuring","val","nextTick","polylines","startNew","getVcParent","polyline","length","positions","pop","measureCmpNames","push","drawCmpNames","$slots","$node","componentOptions","indexOf","tag","child","drawing","$nextTick","viewer","canvas","setAttribute","listener","$listeners","activeEvt","$emit","isActive","computed","points","forEach","index","position","subIndex","point","pixelSize","polylineIndex","positionIndex","disableDepthTestDistance","Cesium","SuperMapVersion","POSITIVE_INFINITY","methods","createCesiumObject","scene","frameState","morphTime","handler","ScreenSpaceEventHandler","setInputAction","LEFT_CLICK","ScreenSpaceEventType","MOUSE_MOVE","RIGHT_CLICK","enterMoveAction","lastCartesianRemoved","visibilityState","VisibilityState","mount","unmount","movement","onMeasureEvt","cartesian","getWorldPosition","defined","nIndex","distances","Cartesian3","distance","getDistance","area","getSurfaceArea","projectedArea","getProjectedArea","moveLastDistance","clonePoistions","clone","startPoint","labels","endPosition","movingEvt","reduce","pre","cur","getHeight","removeLastPosition","distanceH","height","distanceS","clampToGround","getGeodesicDistance","i","s","pointOne","pointTwo","EllipsoidGeodesic","pickedPointCartographic","globe","ellipsoid","cartesianToCartographic","lastPointCartographic","geodesic","surfaceDistance","endPoint","normalStart","normalize","planeStart","Plane","hypPoint","getPointDistance","labelPositonHeight","labelPositonH","labelPositonS","projectPointOntoPlane","midpoint","normalEnd","planeEnd","Math","abs","labelTextHeight","toFixed","text","$vc","lang","measure","verticalHeight","labelTextH","horizontalDistance","labelTextS","spaceDistance","flag","rs","RenderState","fromCache","depthMask","enabled","$refs","polylineCollection","cesiumObject","_opaqueRS","pointCollection","_rsOpaque","labelCollection","_billboardCollection","_rsTranslucent","_backgroundBillboardCollection","measureEvt","label","get","finished","labelsResult","labelHeight","labelH","labelS","windowPosition","result","Cesium3DTileFeature","Cesium3DTileset","Model","Ray","pickPosition","cartesianScratch","rayScratch","pickPositionSupported","hide","pickObj","pick","restore","primitive","S3MTilesLayer","ray","camera","getPickRay","undefined","mixins","cmp","created","defineProperties","enumerable","destroyed","removeInputAction","destroy"],"mappings":"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"}