{"version":3,"file":"index.js","sources":["src/components/stage/PostProcessStage.vue?rollup-plugin-vue=script.js","src/components/stage/PostProcessStage.vue","src/components/stage/index.js"],"sourcesContent":["\nimport {\n  clearColor,\n  scissorRectangle\n} from '../../mixins/mixinProps'\nimport cmp from '../../mixins/virtualCmp'\nexport default {\n  name: 'vc-stage-process-post',\n  mixins: [clearColor, scissorRectangle, cmp],\n  props: {\n    fragmentShader: String,\n    uniforms: Object,\n    textureScale: {\n      type: Number\n    },\n    forcePowerOfTwo: {\n      type: Boolean,\n      default: false\n    },\n    sampleMode: Number,\n    pixelFormat: Number,\n    pixelDatatype: Number,\n    name: String\n  },\n  methods: {\n    async createCesiumObject () {\n      const { $props, transformProps } = this\n      const options = transformProps($props)\n      return new Cesium.PostProcessStage(options)\n    },\n    async mount () {\n      const { postProcessStages, postProcessStage } = this\n      return postProcessStages.add(postProcessStage)\n    },\n    async unmount () {\n      const { postProcessStages, postProcessStage } = this\n      return postProcessStages.remove(postProcessStage)\n    }\n  },\n  created () {\n    Object.defineProperties(this, {\n      postProcessStage: {\n        enumerable: true,\n        get: () => this.cesiumObject\n      },\n      postProcessStages: {\n        enumerable: true,\n        get: () => this.$services && this.$services.postProcessStages\n      }\n    })\n  },\n  stubVNode: {\n    empty () {\n      return this.$options.name\n    }\n  }\n}\n","<script>\nimport {\n  clearColor,\n  scissorRectangle\n} from '../../mixins/mixinProps'\nimport cmp from '../../mixins/virtualCmp'\nexport default {\n  name: 'vc-stage-process-post',\n  mixins: [clearColor, scissorRectangle, cmp],\n  props: {\n    fragmentShader: String,\n    uniforms: Object,\n    textureScale: {\n      type: Number\n    },\n    forcePowerOfTwo: {\n      type: Boolean,\n      default: false\n    },\n    sampleMode: Number,\n    pixelFormat: Number,\n    pixelDatatype: Number,\n    name: String\n  },\n  methods: {\n    async createCesiumObject () {\n      const { $props, transformProps } = this\n      const options = transformProps($props)\n      return new Cesium.PostProcessStage(options)\n    },\n    async mount () {\n      const { postProcessStages, postProcessStage } = this\n      return postProcessStages.add(postProcessStage)\n    },\n    async unmount () {\n      const { postProcessStages, postProcessStage } = this\n      return postProcessStages.remove(postProcessStage)\n    }\n  },\n  created () {\n    Object.defineProperties(this, {\n      postProcessStage: {\n        enumerable: true,\n        get: () => this.cesiumObject\n      },\n      postProcessStages: {\n        enumerable: true,\n        get: () => this.$services && this.$services.postProcessStages\n      }\n    })\n  },\n  stubVNode: {\n    empty () {\n      return this.$options.name\n    }\n  }\n}\n</script>\n","import PostProcessStage from './PostProcessStage.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  Vue.component(PostProcessStage.name, PostProcessStage)\n}\n\nexport default plugin\n\nexport {\n  PostProcessStage,\n  plugin as install\n}\n"],"names":["name","mixins","clearColor","scissorRectangle","cmp","props","fragmentShader","String","uniforms","Object","textureScale","type","Number","forcePowerOfTwo","Boolean","default","sampleMode","pixelFormat","pixelDatatype","methods","createCesiumObject","$props","transformProps","options","Cesium","PostProcessStage","mount","postProcessStages","postProcessStage","add","unmount","remove","created","defineProperties","enumerable","get","cesiumObject","$services","stubVNode","empty","$options","plugin","Vue","installed","component"],"mappings":";;;;;;;;;;;;;;;;AAMA,aAAe;AACbA,EAAAA,IAAI,EAAE,uBADO;AAEbC,EAAAA,MAAM,EAAE,CAACC,UAAD,EAAaC,gBAAb,EAA+BC,GAA/B,CAFK;AAGbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,cAAc,EAAEC,MADX;AAELC,IAAAA,QAAQ,EAAEC,MAFL;AAGLC,IAAAA,YAAY,EAAE;AACZC,MAAAA,IAAI,EAAEC;AADM,KAHT;AAMLC,IAAAA,eAAe,EAAE;AACfF,MAAAA,IAAI,EAAEG,OADS;AAEfC,MAAAA,OAAO,EAAE;AAFM,KANZ;AAULC,IAAAA,UAAU,EAAEJ,MAVP;AAWLK,IAAAA,WAAW,EAAEL,MAXR;AAYLM,IAAAA,aAAa,EAAEN,MAZV;AAaLZ,IAAAA,IAAI,EAAEO;AAbD,GAHM;AAkBbY,EAAAA,OAAO,EAAE;AACDC,IAAAA,kBADC,gCACqB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,gBAAAA,MADkB,GACS,KADT,CAClBA,MADkB,EACVC,cADU,GACS,KADT,CACVA,cADU;AAEpBC,gBAAAA,OAFoB,GAEVD,cAAc,CAACD,MAAD,CAFJ;AAAA,iDAGnB,IAAIG,MAAM,CAACC,gBAAX,CAA4BF,OAA5B,CAHmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAI3B,KALM;AAMDG,IAAAA,KANC,mBAMQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,gBAAAA,iBADK,GACmC,MADnC,CACLA,iBADK,EACcC,gBADd,GACmC,MADnC,CACcA,gBADd;AAAA,kDAEND,iBAAiB,CAACE,GAAlB,CAAsBD,gBAAtB,CAFM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGd,KATM;AAUDE,IAAAA,OAVC,qBAUU;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACPH,gBAAAA,iBADO,GACiC,MADjC,CACPA,iBADO,EACYC,gBADZ,GACiC,MADjC,CACYA,gBADZ;AAAA,kDAERD,iBAAiB,CAACI,MAAlB,CAAyBH,gBAAzB,CAFQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGhB;AAbM,GAlBI;AAiCbI,EAAAA,OAjCa,qBAiCF;AAAA;;AACTvB,IAAAA,MAAM,CAACwB,gBAAP,CAAwB,IAAxB,EAA8B;AAC5BL,MAAAA,gBAAgB,EAAE;AAChBM,QAAAA,UAAU,EAAE,IADI;AAEhBC,QAAAA,GAAG,EAAE;AAAA,iBAAM,MAAI,CAACC,YAAX;AAAA;AAFW,OADU;AAK5BT,MAAAA,iBAAiB,EAAE;AACjBO,QAAAA,UAAU,EAAE,IADK;AAEjBC,QAAAA,GAAG,EAAE;AAAA,iBAAM,MAAI,CAACE,SAAL,IAAkB,MAAI,CAACA,SAAL,CAAeV,iBAAvC;AAAA;AAFY;AALS,KAA9B;AAUD,GA5CY;AA6CbW,EAAAA,SAAS,EAAE;AACTC,IAAAA,KADS,mBACA;AACP,aAAO,KAAKC,QAAL,CAAcxC,IAArB;AACD;AAHQ;AA7CE,CAAf;;;ACHY,2BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDZ,SAASyC,MAAT,CAAiBC,GAAjB,EAAoC;AAAA;AAClC,MAAID,MAAM,CAACE,SAAX,EAAsB;AACpB;AACD;;AACDF,EAAAA,MAAM,CAACE,SAAP,GAAmB,IAAnB;AAEAD,EAAAA,GAAG,CAACE,SAAJ,CAAcnB,gBAAgB,CAACzB,IAA/B,EAAqCyB,gBAArC;AACD;;;;;"}